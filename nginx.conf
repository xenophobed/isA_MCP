# nginx.conf - Fixed for MCP bidirectional SSE connections
events {
    worker_connections 1024;
}

http {
    upstream mcp_backend {
        # Use ip_hash for session affinity - CRITICAL for MCP persistent connections
        ip_hash;
        server mcp-server-1:8001 max_fails=1 fail_timeout=5s;
        server mcp-server-2:8002 max_fails=1 fail_timeout=5s;
        server mcp-server-3:8003 max_fails=1 fail_timeout=5s;
    }

    # Rate limiting - more lenient for MCP
    limit_req_zone $binary_remote_addr zone=mcp_limit:10m rate=30r/s;

    server {
        listen 80;
        server_name localhost;

        # MCP endpoints - Handle both /mcp and /mcp/
        location ~ ^/mcp/?$ {
            limit_req zone=mcp_limit burst=50 nodelay;
            
            # Add trailing slash if missing
            rewrite ^/mcp$ /mcp/ permanent;
            
            proxy_pass http://mcp_backend;
            
            # Essential headers for MCP
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass through ALL headers - critical for MCP client
            proxy_pass_request_headers on;
            proxy_pass_request_body on;
            
            # HTTP/1.1 with persistent connections
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable ALL forms of buffering for real-time SSE
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
            
            # Extended timeouts for MCP persistent sessions
            proxy_connect_timeout 30s;
            proxy_send_timeout 86400s;    # 24 hours
            proxy_read_timeout 86400s;    # 24 hours
            
            # SSE and streaming specific settings
            proxy_set_header Cache-Control "no-cache, no-store, must-revalidate";
            proxy_set_header Pragma "no-cache";
            proxy_set_header Expires "0";
            
            # Response headers for SSE
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            add_header X-Accel-Buffering "no" always;
            
            # Force nginx to not modify the response
            proxy_ignore_headers Cache-Control Expires;
            proxy_hide_header Cache-Control;
            proxy_hide_header Pragma;
            proxy_hide_header Expires;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://mcp_backend/health;
            proxy_set_header Host $host;
            access_log off;
        }

        # Root endpoint for testing
        location / {
            return 200 "MCP Server Load Balancer - Use /mcp endpoint";
            add_header Content-Type text/plain;
        }
    }

    # HTTPS server (commented out for development)
    # Uncomment and configure SSL certificates for production
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     
    #     location /mcp {
    #         limit_req zone=mcp_limit burst=50 nodelay;
    #         proxy_pass http://mcp_backend;
    #         # ... same proxy settings as above
    #     }
    # }
}