apiVersion: v1
kind: ConfigMap
metadata:
  name: mcp-server-config
  namespace: mcp-server
data:
  ENVIRONMENT: "production"
  FASTAPI_HOST: "0.0.0.0"
  MCP_HOST: "0.0.0.0"
  FASTAPI_PORT: "3000"
  MCP_PORT: "8000"
  VERSION: "1.0.0"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: mcp-server
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream mcp_servers {
            least_conn;
            server mcp-server-service:3000 max_fails=3 fail_timeout=30s;
        }
    
        upstream mcp_protocol_servers {
            least_conn;
            server mcp-server-service:8000 max_fails=3 fail_timeout=30s;
        }
    
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=mcp:10m rate=5r/s;
    
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';
    
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
    
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 10M;
    
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
    
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
    
        server {
            listen 80;
            server_name _;
    
            location /health {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://mcp_servers;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 5s;
                proxy_send_timeout 10s;
                proxy_read_timeout 10s;
            }
    
            location / {
                limit_req zone=api burst=30 nodelay;
                proxy_pass http://mcp_servers;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 10s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }
        }
    
        server {
            listen 8080;
            server_name _;
    
            location /mcp {
                limit_req zone=mcp burst=20 nodelay;
                proxy_pass http://mcp_protocol_servers;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 10s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
                
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
            }
        }
    }