{
  "workflow_metadata": {
    "dataset": "/Users/xenodennis/Documents/Fun/isA_MCP/test_data.csv",
    "target_column": "purchase_amount",
    "completion_time": "2025-08-09T02:34:28.422615",
    "ai_enhanced": true
  },
  "eda_results": {
    "metadata": {
      "source_info": {
        "file_path": "/Users/xenodennis/Documents/Fun/isA_MCP/test_data.csv",
        "file_size_mb": 0.0,
        "total_rows": 30,
        "total_columns": 10,
        "has_duplicates": false
      },
      "tables": [
        {
          "table_name": "test_data",
          "table_type": "file",
          "record_count": 30,
          "column_count": 10,
          "file_size_mb": 0.0,
          "created_date": "2025-08-09T02:20:12.404665",
          "modified_date": "2025-08-09T02:20:12.398435"
        }
      ],
      "columns": [
        {
          "table_name": "test_data",
          "column_name": "customer_id",
          "data_type": "int64",
          "business_type": "identifier",
          "ordinal_position": 1,
          "is_nullable": false,
          "null_percentage": 0.0,
          "unique_count": 30,
          "unique_percentage": 100.0,
          "sample_values": [
            1,
            2,
            3
          ],
          "min_value": 1.0,
          "max_value": 30.0,
          "mean_value": 15.5,
          "median_value": 15.5
        },
        {
          "table_name": "test_data",
          "column_name": "age",
          "data_type": "int64",
          "business_type": "numeric",
          "ordinal_position": 2,
          "is_nullable": false,
          "null_percentage": 0.0,
          "unique_count": 23,
          "unique_percentage": 76.67,
          "sample_values": [
            23,
            31,
            40
          ],
          "min_value": 23.0,
          "max_value": 45.0,
          "mean_value": 33.0,
          "median_value": 32.0
        },
        {
          "table_name": "test_data",
          "column_name": "income",
          "data_type": "int64",
          "business_type": "numeric",
          "ordinal_position": 3,
          "is_nullable": false,
          "null_percentage": 0.0,
          "unique_count": 30,
          "unique_percentage": 100.0,
          "sample_values": [
            15000,
            45000,
            58000
          ],
          "min_value": 15000.0,
          "max_value": 78000.0,
          "mean_value": 47200.0,
          "median_value": 46500.0
        },
        {
          "table_name": "test_data",
          "column_name": "spending_score",
          "data_type": "int64",
          "business_type": "numeric",
          "ordinal_position": 4,
          "is_nullable": false,
          "null_percentage": 0.0,
          "unique_count": 30,
          "unique_percentage": 100.0,
          "sample_values": [
            81,
            62,
            55
          ],
          "min_value": 38.0,
          "max_value": 88.0,
          "mean_value": 64.16666666666667,
          "median_value": 65.5
        },
        {
          "table_name": "test_data",
          "column_name": "purchase_amount",
          "data_type": "float64",
          "business_type": "monetary",
          "ordinal_position": 5,
          "is_nullable": false,
          "null_percentage": 0.0,
          "unique_count": 30,
          "unique_percentage": 100.0,
          "sample_values": [
            120.5,
            89.3,
            156.75
          ],
          "min_value": 67.9,
          "max_value": 245.8,
          "mean_value": 143.45666666666665,
          "median_value": 150.95
        },
        {
          "table_name": "test_data",
          "column_name": "gender",
          "data_type": "object",
          "business_type": "text",
          "ordinal_position": 6,
          "is_nullable": false,
          "null_percentage": 0.0,
          "unique_count": 2,
          "unique_percentage": 6.67,
          "sample_values": [
            "Female",
            "Male"
          ],
          "avg_length": 5.0,
          "min_length": 4,
          "max_length": 6,
          "most_common": {
            "Female": "15",
            "Male": "15"
          }
        },
        {
          "table_name": "test_data",
          "column_name": "membership_tier",
          "data_type": "object",
          "business_type": "text",
          "ordinal_position": 7,
          "is_nullable": false,
          "null_percentage": 0.0,
          "unique_count": 4,
          "unique_percentage": 13.33,
          "sample_values": [
            "Bronze",
            "Gold",
            "Silver"
          ],
          "avg_length": 5.866666666666666,
          "min_length": 4,
          "max_length": 8,
          "most_common": {
            "Bronze": "10",
            "Silver": "10",
            "Gold": "6"
          }
        },
        {
          "table_name": "test_data",
          "column_name": "last_visit_days",
          "data_type": "int64",
          "business_type": "numeric",
          "ordinal_position": 8,
          "is_nullable": false,
          "null_percentage": 0.0,
          "unique_count": 13,
          "unique_percentage": 43.33,
          "sample_values": [
            2,
            5,
            1
          ],
          "min_value": 1.0,
          "max_value": 14.0,
          "mean_value": 4.9,
          "median_value": 4.0
        },
        {
          "table_name": "test_data",
          "column_name": "total_visits",
          "data_type": "int64",
          "business_type": "numeric",
          "ordinal_position": 9,
          "is_nullable": false,
          "null_percentage": 0.0,
          "unique_count": 27,
          "unique_percentage": 90.0,
          "sample_values": [
            45,
            123,
            78
          ],
          "min_value": 12.0,
          "max_value": 234.0,
          "mean_value": 88.63333333333334,
          "median_value": 75.5
        },
        {
          "table_name": "test_data",
          "column_name": "preferred_category",
          "data_type": "object",
          "business_type": "text",
          "ordinal_position": 10,
          "is_nullable": false,
          "null_percentage": 0.0,
          "unique_count": 6,
          "unique_percentage": 20.0,
          "sample_values": [
            "Electronics",
            "Clothing",
            "Home"
          ],
          "avg_length": 6.866666666666666,
          "min_length": 4,
          "max_length": 11,
          "most_common": {
            "Electronics": "6",
            "Clothing": "5",
            "Home": "5"
          }
        }
      ],
      "data_quality": {
        "overall_quality_score": 1.0,
        "completeness_percentage": 100.0,
        "total_cells": 300,
        "null_cells": 0
      },
      "business_patterns": {
        "domain_scores": {
          "ecommerce": 1,
          "finance": 1,
          "hr": 0,
          "crm": 1
        },
        "primary_domain": "ecommerce",
        "confidence": 0.1
      },
      "sample_data": [
        {
          "customer_id": 1,
          "age": 23,
          "income": 15000,
          "spending_score": 81,
          "purchase_amount": 120.5,
          "gender": "Female",
          "membership_tier": "Bronze",
          "last_visit_days": 2,
          "total_visits": 45,
          "preferred_category": "Electronics"
        },
        {
          "customer_id": 2,
          "age": 31,
          "income": 45000,
          "spending_score": 62,
          "purchase_amount": 89.3,
          "gender": "Male",
          "membership_tier": "Gold",
          "last_visit_days": 5,
          "total_visits": 123,
          "preferred_category": "Clothing"
        },
        {
          "customer_id": 3,
          "age": 40,
          "income": 58000,
          "spending_score": 55,
          "purchase_amount": 156.75,
          "gender": "Female",
          "membership_tier": "Silver",
          "last_visit_days": 1,
          "total_visits": 78,
          "preferred_category": "Home"
        },
        {
          "customer_id": 4,
          "age": 26,
          "income": 32000,
          "spending_score": 78,
          "purchase_amount": 201.2,
          "gender": "Male",
          "membership_tier": "Bronze",
          "last_visit_days": 3,
          "total_visits": 34,
          "preferred_category": "Sports"
        },
        {
          "customer_id": 5,
          "age": 35,
          "income": 65000,
          "spending_score": 49,
          "purchase_amount": 95.8,
          "gender": "Female",
          "membership_tier": "Gold",
          "last_visit_days": 7,
          "total_visits": 156,
          "preferred_category": "Electronics"
        }
      ],
      "raw_metadata": {
        "file_info": {
          "file_name": "test_data.csv",
          "file_path": "/Users/xenodennis/Documents/Fun/isA_MCP/test_data.csv",
          "file_size_bytes": 1551,
          "file_size_mb": 0.0,
          "created_time": "2025-08-09T02:20:12.404665",
          "modified_time": "2025-08-09T02:20:12.398435"
        },
        "structure": {
          "total_rows": 30,
          "total_columns": 10,
          "column_names": [
            "customer_id",
            "age",
            "income",
            "spending_score",
            "purchase_amount",
            "gender",
            "membership_tier",
            "last_visit_days",
            "total_visits",
            "preferred_category"
          ],
          "memory_usage_mb": 0.01,
          "has_duplicates": false,
          "duplicate_count": 0
        },
        "columns": [
          {
            "column_name": "customer_id",
            "ordinal_position": 1,
            "data_type": "int64",
            "total_values": 30,
            "null_count": 0,
            "null_percentage": 0.0,
            "unique_count": 30,
            "unique_percentage": 100.0,
            "business_type": "identifier",
            "sample_values": [
              1,
              2,
              3
            ],
            "min_value": 1.0,
            "max_value": 30.0,
            "mean_value": 15.5,
            "median_value": 15.5
          },
          {
            "column_name": "age",
            "ordinal_position": 2,
            "data_type": "int64",
            "total_values": 30,
            "null_count": 0,
            "null_percentage": 0.0,
            "unique_count": 23,
            "unique_percentage": 76.67,
            "business_type": "numeric",
            "sample_values": [
              23,
              31,
              40
            ],
            "min_value": 23.0,
            "max_value": 45.0,
            "mean_value": 33.0,
            "median_value": 32.0
          },
          {
            "column_name": "income",
            "ordinal_position": 3,
            "data_type": "int64",
            "total_values": 30,
            "null_count": 0,
            "null_percentage": 0.0,
            "unique_count": 30,
            "unique_percentage": 100.0,
            "business_type": "numeric",
            "sample_values": [
              15000,
              45000,
              58000
            ],
            "min_value": 15000.0,
            "max_value": 78000.0,
            "mean_value": 47200.0,
            "median_value": 46500.0
          },
          {
            "column_name": "spending_score",
            "ordinal_position": 4,
            "data_type": "int64",
            "total_values": 30,
            "null_count": 0,
            "null_percentage": 0.0,
            "unique_count": 30,
            "unique_percentage": 100.0,
            "business_type": "numeric",
            "sample_values": [
              81,
              62,
              55
            ],
            "min_value": 38.0,
            "max_value": 88.0,
            "mean_value": 64.16666666666667,
            "median_value": 65.5
          },
          {
            "column_name": "purchase_amount",
            "ordinal_position": 5,
            "data_type": "float64",
            "total_values": 30,
            "null_count": 0,
            "null_percentage": 0.0,
            "unique_count": 30,
            "unique_percentage": 100.0,
            "business_type": "monetary",
            "sample_values": [
              120.5,
              89.3,
              156.75
            ],
            "min_value": 67.9,
            "max_value": 245.8,
            "mean_value": 143.45666666666665,
            "median_value": 150.95
          },
          {
            "column_name": "gender",
            "ordinal_position": 6,
            "data_type": "object",
            "total_values": 30,
            "null_count": 0,
            "null_percentage": 0.0,
            "unique_count": 2,
            "unique_percentage": 6.67,
            "business_type": "text",
            "sample_values": [
              "Female",
              "Male"
            ],
            "avg_length": 5.0,
            "min_length": 4,
            "max_length": 6,
            "most_common": {
              "Female": "15",
              "Male": "15"
            }
          },
          {
            "column_name": "membership_tier",
            "ordinal_position": 7,
            "data_type": "object",
            "total_values": 30,
            "null_count": 0,
            "null_percentage": 0.0,
            "unique_count": 4,
            "unique_percentage": 13.33,
            "business_type": "text",
            "sample_values": [
              "Bronze",
              "Gold",
              "Silver"
            ],
            "avg_length": 5.866666666666666,
            "min_length": 4,
            "max_length": 8,
            "most_common": {
              "Bronze": "10",
              "Silver": "10",
              "Gold": "6"
            }
          },
          {
            "column_name": "last_visit_days",
            "ordinal_position": 8,
            "data_type": "int64",
            "total_values": 30,
            "null_count": 0,
            "null_percentage": 0.0,
            "unique_count": 13,
            "unique_percentage": 43.33,
            "business_type": "numeric",
            "sample_values": [
              2,
              5,
              1
            ],
            "min_value": 1.0,
            "max_value": 14.0,
            "mean_value": 4.9,
            "median_value": 4.0
          },
          {
            "column_name": "total_visits",
            "ordinal_position": 9,
            "data_type": "int64",
            "total_values": 30,
            "null_count": 0,
            "null_percentage": 0.0,
            "unique_count": 27,
            "unique_percentage": 90.0,
            "business_type": "numeric",
            "sample_values": [
              45,
              123,
              78
            ],
            "min_value": 12.0,
            "max_value": 234.0,
            "mean_value": 88.63333333333334,
            "median_value": 75.5
          },
          {
            "column_name": "preferred_category",
            "ordinal_position": 10,
            "data_type": "object",
            "total_values": 30,
            "null_count": 0,
            "null_percentage": 0.0,
            "unique_count": 6,
            "unique_percentage": 20.0,
            "business_type": "text",
            "sample_values": [
              "Electronics",
              "Clothing",
              "Home"
            ],
            "avg_length": 6.866666666666666,
            "min_length": 4,
            "max_length": 11,
            "most_common": {
              "Electronics": "6",
              "Clothing": "5",
              "Home": "5"
            }
          }
        ],
        "data_quality": {
          "overall_quality_score": 1.0,
          "completeness_percentage": 100.0,
          "total_cells": 300,
          "null_cells": 0
        },
        "patterns": {
          "domain_scores": {
            "ecommerce": 1,
            "finance": 1,
            "hr": 0,
            "crm": 1
          },
          "primary_domain": "ecommerce",
          "confidence": 0.1
        },
        "sample_data": [
          {
            "customer_id": 1,
            "age": 23,
            "income": 15000,
            "spending_score": 81,
            "purchase_amount": 120.5,
            "gender": "Female",
            "membership_tier": "Bronze",
            "last_visit_days": 2,
            "total_visits": 45,
            "preferred_category": "Electronics"
          },
          {
            "customer_id": 2,
            "age": 31,
            "income": 45000,
            "spending_score": 62,
            "purchase_amount": 89.3,
            "gender": "Male",
            "membership_tier": "Gold",
            "last_visit_days": 5,
            "total_visits": 123,
            "preferred_category": "Clothing"
          },
          {
            "customer_id": 3,
            "age": 40,
            "income": 58000,
            "spending_score": 55,
            "purchase_amount": 156.75,
            "gender": "Female",
            "membership_tier": "Silver",
            "last_visit_days": 1,
            "total_visits": 78,
            "preferred_category": "Home"
          },
          {
            "customer_id": 4,
            "age": 26,
            "income": 32000,
            "spending_score": 78,
            "purchase_amount": 201.2,
            "gender": "Male",
            "membership_tier": "Bronze",
            "last_visit_days": 3,
            "total_visits": 34,
            "preferred_category": "Sports"
          },
          {
            "customer_id": 5,
            "age": 35,
            "income": 65000,
            "spending_score": 49,
            "purchase_amount": 95.8,
            "gender": "Female",
            "membership_tier": "Gold",
            "last_visit_days": 7,
            "total_visits": 156,
            "preferred_category": "Electronics"
          }
        ],
        "analysis_timestamp": "2025-08-09T02:33:24.390674"
      },
      "extraction_info": {
        "service": "MetadataExtractor",
        "version": "1.0.0",
        "source_type": "csv",
        "source_path": "/Users/xenodennis/Documents/Fun/isA_MCP/test_data.csv",
        "extraction_time": "2025-08-09T02:33:24.390723",
        "extraction_duration_seconds": 0.01,
        "success": true
      }
    },
    "data_overview": {
      "basic_info": {
        "rows": 30,
        "columns": 10,
        "memory_usage_mb": 0.01,
        "file_size_mb": 0.0
      },
      "column_types": {
        "numeric": 7,
        "categorical": 3,
        "datetime": 7
      },
      "missing_data": {
        "total_missing_cells": 0,
        "missing_percentage": 0.0,
        "columns_with_missing": [],
        "rows_with_missing": 0
      },
      "duplicates": {
        "duplicate_rows": 0,
        "duplicate_percentage": 0.0
      },
      "datetime_columns": [
        "customer_id",
        "age",
        "income",
        "spending_score",
        "purchase_amount",
        "last_visit_days",
        "total_visits"
      ],
      "sample_data": {
        "head": [
          {
            "customer_id": 1,
            "age": 23,
            "income": 15000,
            "spending_score": 81,
            "purchase_amount": 120.5,
            "gender": "Female",
            "membership_tier": "Bronze",
            "last_visit_days": 2,
            "total_visits": 45,
            "preferred_category": "Electronics"
          },
          {
            "customer_id": 2,
            "age": 31,
            "income": 45000,
            "spending_score": 62,
            "purchase_amount": 89.3,
            "gender": "Male",
            "membership_tier": "Gold",
            "last_visit_days": 5,
            "total_visits": 123,
            "preferred_category": "Clothing"
          },
          {
            "customer_id": 3,
            "age": 40,
            "income": 58000,
            "spending_score": 55,
            "purchase_amount": 156.75,
            "gender": "Female",
            "membership_tier": "Silver",
            "last_visit_days": 1,
            "total_visits": 78,
            "preferred_category": "Home"
          }
        ],
        "tail": [
          {
            "customer_id": 29,
            "age": 35,
            "income": 52000,
            "spending_score": 59,
            "purchase_amount": 127.9,
            "gender": "Female",
            "membership_tier": "Silver",
            "last_visit_days": 5,
            "total_visits": 95,
            "preferred_category": "Sports"
          },
          {
            "customer_id": 30,
            "age": 32,
            "income": 44000,
            "spending_score": 65,
            "purchase_amount": 168.4,
            "gender": "Male",
            "membership_tier": "Silver",
            "last_visit_days": 4,
            "total_visits": 71,
            "preferred_category": "Electronics"
          }
        ]
      },
      "column_summary": [
        {
          "name": "customer_id",
          "type": "int64",
          "unique_values": 30,
          "missing_count": 0,
          "missing_percentage": 0.0,
          "min": 1.0,
          "max": 30.0,
          "mean": 15.5
        },
        {
          "name": "age",
          "type": "int64",
          "unique_values": 23,
          "missing_count": 0,
          "missing_percentage": 0.0,
          "min": 23.0,
          "max": 45.0,
          "mean": 33.0
        },
        {
          "name": "income",
          "type": "int64",
          "unique_values": 30,
          "missing_count": 0,
          "missing_percentage": 0.0,
          "min": 15000.0,
          "max": 78000.0,
          "mean": 47200.0
        },
        {
          "name": "spending_score",
          "type": "int64",
          "unique_values": 30,
          "missing_count": 0,
          "missing_percentage": 0.0,
          "min": 38.0,
          "max": 88.0,
          "mean": 64.16666666666667
        },
        {
          "name": "purchase_amount",
          "type": "float64",
          "unique_values": 30,
          "missing_count": 0,
          "missing_percentage": 0.0,
          "min": 67.9,
          "max": 245.8,
          "mean": 143.45666666666665
        },
        {
          "name": "gender",
          "type": "object",
          "unique_values": 2,
          "missing_count": 0,
          "missing_percentage": 0.0,
          "most_frequent": "Female"
        },
        {
          "name": "membership_tier",
          "type": "object",
          "unique_values": 4,
          "missing_count": 0,
          "missing_percentage": 0.0,
          "most_frequent": "Bronze"
        },
        {
          "name": "last_visit_days",
          "type": "int64",
          "unique_values": 13,
          "missing_count": 0,
          "missing_percentage": 0.0,
          "min": 1.0,
          "max": 14.0,
          "mean": 4.9
        },
        {
          "name": "total_visits",
          "type": "int64",
          "unique_values": 27,
          "missing_count": 0,
          "missing_percentage": 0.0,
          "min": 12.0,
          "max": 234.0,
          "mean": 88.63333333333334
        },
        {
          "name": "preferred_category",
          "type": "object",
          "unique_values": 6,
          "missing_count": 0,
          "missing_percentage": 0.0,
          "most_frequent": "Electronics"
        }
      ]
    },
    "statistical_analysis": {
      "basic_statistics": {
        "descriptive_statistics": {
          "customer_id": {
            "count": 30.0,
            "mean": 15.5,
            "std": 8.803408430829505,
            "min": 1.0,
            "25%": 8.25,
            "50%": 15.5,
            "75%": 22.75,
            "max": 30.0
          },
          "age": {
            "count": 30.0,
            "mean": 33.0,
            "std": 6.351757834348449,
            "min": 23.0,
            "25%": 28.0,
            "50%": 32.0,
            "75%": 37.75,
            "max": 45.0
          },
          "income": {
            "count": 30.0,
            "mean": 47200.0,
            "std": 16779.297589178364,
            "min": 15000.0,
            "25%": 33250.0,
            "50%": 46500.0,
            "75%": 60250.0,
            "max": 78000.0
          },
          "spending_score": {
            "count": 30.0,
            "mean": 64.16666666666667,
            "std": 14.88596500140278,
            "min": 38.0,
            "25%": 51.5,
            "50%": 65.5,
            "75%": 76.75,
            "max": 88.0
          },
          "purchase_amount": {
            "count": 30.0,
            "mean": 143.45666666666665,
            "std": 47.73222856391854,
            "min": 67.9,
            "25%": 96.525,
            "50%": 150.95,
            "75%": 181.675,
            "max": 245.8
          },
          "last_visit_days": {
            "count": 30.0,
            "mean": 4.9,
            "std": 3.4972895909201775,
            "min": 1.0,
            "25%": 2.0,
            "50%": 4.0,
            "75%": 6.75,
            "max": 14.0
          },
          "total_visits": {
            "count": 30.0,
            "mean": 88.63333333333334,
            "std": 58.104236496580654,
            "min": 12.0,
            "25%": 45.0,
            "50%": 75.5,
            "75%": 120.25,
            "max": 234.0
          }
        },
        "detailed_statistics": {
          "customer_id": {
            "count": 30,
            "mean": 15.5,
            "median": 15.5,
            "mode": 1.0,
            "std": 8.803408430829505,
            "var": 77.5,
            "skewness": 0.0,
            "kurtosis": -1.2000000000000002,
            "range": 29.0,
            "iqr": 14.5,
            "coefficient_of_variation": 0.5679618342470648,
            "quantiles": {
              "q5": 2.45,
              "q10": 3.9000000000000004,
              "q25": 8.25,
              "q50": 15.5,
              "q75": 22.75,
              "q90": 27.1,
              "q95": 28.549999999999997
            }
          },
          "age": {
            "count": 30,
            "mean": 33.0,
            "median": 32.0,
            "mode": 26.0,
            "std": 6.351757834348449,
            "var": 40.3448275862069,
            "skewness": 0.3330392421362846,
            "kurtosis": -0.9747875423089098,
            "range": 22.0,
            "iqr": 9.75,
            "coefficient_of_variation": 0.1924775101317712,
            "quantiles": {
              "q5": 24.45,
              "q10": 25.9,
              "q25": 28.0,
              "q50": 32.0,
              "q75": 37.75,
              "q90": 42.1,
              "q95": 43.55
            }
          },
          "income": {
            "count": 30,
            "mean": 47200.0,
            "median": 46500.0,
            "mode": 15000.0,
            "std": 16779.297589178364,
            "var": 281544827.5862069,
            "skewness": 0.1117955224386666,
            "kurtosis": -0.8336762112591152,
            "range": 63000.0,
            "iqr": 27000.0,
            "coefficient_of_variation": 0.35549359299106703,
            "quantiles": {
              "q5": 23800.0,
              "q10": 27800.0,
              "q25": 33250.0,
              "q50": 46500.0,
              "q75": 60250.0,
              "q90": 71100.0,
              "q95": 73100.0
            }
          },
          "spending_score": {
            "count": 30,
            "mean": 64.16666666666667,
            "median": 65.5,
            "mode": 38.0,
            "std": 14.88596500140278,
            "var": 221.5919540229885,
            "skewness": -0.1954049876532426,
            "kurtosis": -1.1691209273961252,
            "range": 50.0,
            "iqr": 25.25,
            "coefficient_of_variation": 0.23198906495692642,
            "quantiles": {
              "q5": 41.45,
              "q10": 42.9,
              "q25": 51.5,
              "q50": 65.5,
              "q75": 76.75,
              "q90": 82.2,
              "q95": 84.55
            }
          },
          "purchase_amount": {
            "count": 30,
            "mean": 143.45666666666665,
            "median": 150.95,
            "mode": 67.9,
            "std": 47.73222856391854,
            "var": 2278.3656436781607,
            "skewness": 0.09737676656941326,
            "kurtosis": -0.993963000501334,
            "range": 177.9,
            "iqr": 85.15,
            "coefficient_of_variation": 0.3327292462108317,
            "quantiles": {
              "q5": 77.4,
              "q10": 83.63000000000001,
              "q25": 96.525,
              "q50": 150.95,
              "q75": 181.675,
              "q90": 198.995,
              "q95": 205.73749999999995
            }
          },
          "last_visit_days": {
            "count": 30,
            "mean": 4.9,
            "median": 4.0,
            "mode": 2.0,
            "std": 3.4972895909201775,
            "var": 12.231034482758622,
            "skewness": 1.0377016961565935,
            "kurtosis": 0.40853785663445663,
            "range": 13.0,
            "iqr": 4.75,
            "coefficient_of_variation": 0.7137325695755464,
            "quantiles": {
              "q5": 1.0,
              "q10": 1.0,
              "q25": 2.0,
              "q50": 4.0,
              "q75": 6.75,
              "q90": 10.100000000000001,
              "q95": 11.549999999999997
            }
          },
          "total_visits": {
            "count": 30,
            "mean": 88.63333333333334,
            "median": 75.5,
            "mode": 45.0,
            "std": 58.104236496580654,
            "var": 3376.1022988505756,
            "skewness": 0.9198295548822573,
            "kurtosis": 0.11333041607875538,
            "range": 222.0,
            "iqr": 75.25,
            "coefficient_of_variation": 0.6555573880772544,
            "quantiles": {
              "q5": 21.9,
              "q10": 28.400000000000002,
              "q25": 45.0,
              "q50": 75.5,
              "q75": 120.25,
              "q90": 179.10000000000002,
              "q95": 195.59999999999997
            }
          }
        }
      },
      "correlation_analysis": {
        "pearson_correlation_matrix": {
          "customer_id": {
            "customer_id": 1.0,
            "age": 0.12580195387676918,
            "income": 0.1290929441450684,
            "spending_score": -0.09249100247437754,
            "purchase_amount": 0.0774578477325661,
            "last_visit_days": 0.1416805000763756,
            "total_visits": 0.1124785121717084
          },
          "age": {
            "customer_id": 0.12580195387676918,
            "age": 1.0,
            "income": 0.9686928398596988,
            "spending_score": -0.9617035216567664,
            "purchase_amount": -0.7735555083295973,
            "last_visit_days": 0.8397958806171274,
            "total_visits": 0.8708889482890034
          },
          "income": {
            "customer_id": 0.1290929441450684,
            "age": 0.9686928398596988,
            "income": 1.0,
            "spending_score": -0.9731476596671973,
            "purchase_amount": -0.7684369883168819,
            "last_visit_days": 0.8535769327294409,
            "total_visits": 0.8920437870365524
          },
          "spending_score": {
            "customer_id": -0.09249100247437754,
            "age": -0.9617035216567664,
            "income": -0.9731476596671973,
            "spending_score": 1.0,
            "purchase_amount": 0.8346813349375379,
            "last_visit_days": -0.8666966945011628,
            "total_visits": -0.9163972157591355
          },
          "purchase_amount": {
            "customer_id": 0.0774578477325661,
            "age": -0.7735555083295973,
            "income": -0.7684369883168819,
            "spending_score": 0.8346813349375379,
            "purchase_amount": 1.0,
            "last_visit_days": -0.8323739452447928,
            "total_visits": -0.8164716076851771
          },
          "last_visit_days": {
            "customer_id": 0.1416805000763756,
            "age": 0.8397958806171274,
            "income": 0.8535769327294409,
            "spending_score": -0.8666966945011628,
            "purchase_amount": -0.8323739452447928,
            "last_visit_days": 1.0,
            "total_visits": 0.9068196672614608
          },
          "total_visits": {
            "customer_id": 0.1124785121717084,
            "age": 0.8708889482890034,
            "income": 0.8920437870365524,
            "spending_score": -0.9163972157591355,
            "purchase_amount": -0.8164716076851771,
            "last_visit_days": 0.9068196672614608,
            "total_visits": 1.0
          }
        },
        "spearman_correlation_matrix": {
          "customer_id": {
            "customer_id": 1.0,
            "age": 0.1371479877606482,
            "income": 0.1150166852057842,
            "spending_score": -0.0967741935483871,
            "purchase_amount": 0.08075639599555061,
            "last_visit_days": 0.18110944556777445,
            "total_visits": 0.11728052283577259
          },
          "age": {
            "customer_id": 0.1371479877606482,
            "age": 1.0,
            "income": 0.9720586275373215,
            "spending_score": -0.9573642002772521,
            "purchase_amount": -0.7431817908198761,
            "last_visit_days": 0.7738438520273876,
            "total_visits": 0.8973274832295006
          },
          "income": {
            "customer_id": 0.1150166852057842,
            "age": 0.9720586275373215,
            "income": 1.0,
            "spending_score": -0.9750834260289211,
            "purchase_amount": -0.7566184649610679,
            "last_visit_days": 0.8177908586638813,
            "total_visits": 0.921998493564717
          },
          "spending_score": {
            "customer_id": -0.0967741935483871,
            "age": -0.9573642002772521,
            "income": -0.9750834260289211,
            "spending_score": 1.0,
            "purchase_amount": 0.79265850945495,
            "last_visit_days": -0.8392822143802057,
            "total_visits": -0.9542673281210491
          },
          "purchase_amount": {
            "customer_id": 0.08075639599555061,
            "age": -0.7431817908198761,
            "income": -0.7566184649610679,
            "spending_score": 0.79265850945495,
            "purchase_amount": 1.0,
            "last_visit_days": -0.847565341062539,
            "total_visits": -0.8171804171782864
          },
          "last_visit_days": {
            "customer_id": 0.18110944556777445,
            "age": 0.7738438520273876,
            "income": 0.8177908586638813,
            "spending_score": -0.8392822143802057,
            "purchase_amount": -0.847565341062539,
            "last_visit_days": 1.0,
            "total_visits": 0.8655398182790819
          },
          "total_visits": {
            "customer_id": 0.11728052283577259,
            "age": 0.8973274832295006,
            "income": 0.921998493564717,
            "spending_score": -0.9542673281210491,
            "purchase_amount": -0.8171804171782864,
            "last_visit_days": 0.8655398182790819,
            "total_visits": 1.0
          }
        },
        "kendall_correlation_matrix": {
          "customer_id": {
            "customer_id": 1.0,
            "age": 0.09733808042788678,
            "income": 0.07586206896551725,
            "spending_score": -0.06666666666666667,
            "purchase_amount": 0.05287356321839081,
            "last_visit_days": 0.12434997108369143,
            "total_visits": 0.06920456654478331
          },
          "age": {
            "customer_id": 0.09733808042788678,
            "age": 1.0,
            "income": 0.8853130172250654,
            "spending_score": -0.8343264036676009,
            "purchase_amount": -0.5840284825673207,
            "last_visit_days": 0.6726192496818272,
            "total_visits": 0.7465197027987048
          },
          "income": {
            "customer_id": 0.07586206896551725,
            "age": 0.8853130172250654,
            "income": 1.0,
            "spending_score": -0.8988505747126437,
            "purchase_amount": -0.5954022988505747,
            "last_visit_days": 0.7030556057424092,
            "total_visits": 0.8027729719194863
          },
          "spending_score": {
            "customer_id": -0.06666666666666667,
            "age": -0.8343264036676009,
            "income": -0.8988505747126437,
            "spending_score": 1.0,
            "purchase_amount": 0.6229885057471265,
            "last_visit_days": -0.7317517529155688,
            "total_visits": -0.858136625155313
          },
          "purchase_amount": {
            "customer_id": 0.05287356321839081,
            "age": -0.5840284825673207,
            "income": -0.5954022988505747,
            "spending_score": 0.6229885057471265,
            "purchase_amount": 1.0,
            "last_visit_days": -0.6934902233513561,
            "total_visits": -0.6412956499816587
          },
          "last_visit_days": {
            "customer_id": 0.12434997108369143,
            "age": 0.6726192496818272,
            "income": 0.7030556057424092,
            "spending_score": -0.7317517529155688,
            "purchase_amount": -0.6934902233513561,
            "last_visit_days": 1.0,
            "total_visits": 0.734288161744156
          },
          "total_visits": {
            "customer_id": 0.06920456654478331,
            "age": 0.7465197027987048,
            "income": 0.8027729719194863,
            "spending_score": -0.858136625155313,
            "purchase_amount": -0.6412956499816587,
            "last_visit_days": 0.734288161744156,
            "total_visits": 1.0
          }
        },
        "pairwise_analysis": [
          {
            "variable1": "customer_id",
            "variable2": "age",
            "sample_size": 30,
            "pearson": {
              "correlation": 0.1258019538767693,
              "p_value": 0.5077107440802817,
              "significant": "False"
            },
            "spearman": {
              "correlation": 0.1371479877606482,
              "p_value": 0.46986600611416685,
              "significant": "False"
            },
            "interpretation": "Very weak"
          },
          {
            "variable1": "customer_id",
            "variable2": "income",
            "sample_size": 30,
            "pearson": {
              "correlation": 0.12909294414506867,
              "p_value": 0.49658040351864197,
              "significant": "False"
            },
            "spearman": {
              "correlation": 0.11501668520578419,
              "p_value": 0.5450342669201209,
              "significant": "False"
            },
            "interpretation": "Very weak"
          },
          {
            "variable1": "customer_id",
            "variable2": "spending_score",
            "sample_size": 30,
            "pearson": {
              "correlation": -0.09249100247437667,
              "p_value": 0.6268875144274006,
              "significant": "False"
            },
            "spearman": {
              "correlation": -0.0967741935483871,
              "p_value": 0.6109428677788464,
              "significant": "False"
            },
            "interpretation": "Very weak"
          },
          {
            "variable1": "customer_id",
            "variable2": "purchase_amount",
            "sample_size": 30,
            "pearson": {
              "correlation": 0.07745784773256581,
              "p_value": 0.6841261851730946,
              "significant": "False"
            },
            "spearman": {
              "correlation": 0.08075639599555061,
              "p_value": 0.6714052660558583,
              "significant": "False"
            },
            "interpretation": "Very weak"
          },
          {
            "variable1": "customer_id",
            "variable2": "last_visit_days",
            "sample_size": 30,
            "pearson": {
              "correlation": 0.14168050007637556,
              "p_value": 0.45517128091609405,
              "significant": "False"
            },
            "spearman": {
              "correlation": 0.1811094455677745,
              "p_value": 0.33817432326733077,
              "significant": "False"
            },
            "interpretation": "Very weak"
          },
          {
            "variable1": "customer_id",
            "variable2": "total_visits",
            "sample_size": 30,
            "pearson": {
              "correlation": 0.11247851217170833,
              "p_value": 0.5540010376354066,
              "significant": "False"
            },
            "spearman": {
              "correlation": 0.1172805228357726,
              "p_value": 0.5370945970039751,
              "significant": "False"
            },
            "interpretation": "Very weak"
          },
          {
            "variable1": "age",
            "variable2": "income",
            "sample_size": 30,
            "pearson": {
              "correlation": 0.9686928398596986,
              "p_value": 1.7573367015269414e-18,
              "significant": "True"
            },
            "spearman": {
              "correlation": 0.9720586275373219,
              "p_value": 3.650035891557545e-19,
              "significant": "True"
            },
            "interpretation": "Very strong"
          },
          {
            "variable1": "age",
            "variable2": "spending_score",
            "sample_size": 30,
            "pearson": {
              "correlation": -0.9617035216567664,
              "p_value": 2.82725744480959e-17,
              "significant": "True"
            },
            "spearman": {
              "correlation": -0.9573642002772522,
              "p_value": 1.2369234735084446e-16,
              "significant": "True"
            },
            "interpretation": "Very strong"
          },
          {
            "variable1": "age",
            "variable2": "purchase_amount",
            "sample_size": 30,
            "pearson": {
              "correlation": -0.7735555083295969,
              "p_value": 5.370667887956156e-07,
              "significant": "True"
            },
            "spearman": {
              "correlation": -0.7431817908198762,
              "p_value": 2.5460896205441633e-06,
              "significant": "True"
            },
            "interpretation": "Strong"
          },
          {
            "variable1": "age",
            "variable2": "last_visit_days",
            "sample_size": 30,
            "pearson": {
              "correlation": 0.8397958806171275,
              "p_value": 6.556182922552503e-09,
              "significant": "True"
            },
            "spearman": {
              "correlation": 0.7738438520273877,
              "p_value": 5.285963785293425e-07,
              "significant": "True"
            },
            "interpretation": "Strong"
          },
          {
            "variable1": "age",
            "variable2": "total_visits",
            "sample_size": 30,
            "pearson": {
              "correlation": 0.8708889482890032,
              "p_value": 3.9100226688133375e-10,
              "significant": "True"
            },
            "spearman": {
              "correlation": 0.8973274832295006,
              "p_value": 1.872600638504512e-11,
              "significant": "True"
            },
            "interpretation": "Strong"
          },
          {
            "variable1": "income",
            "variable2": "spending_score",
            "sample_size": 30,
            "pearson": {
              "correlation": -0.9731476596671974,
              "p_value": 2.1061206542608667e-19,
              "significant": "True"
            },
            "spearman": {
              "correlation": -0.9750834260289211,
              "p_value": 7.477026742176401e-20,
              "significant": "True"
            },
            "interpretation": "Very strong"
          },
          {
            "variable1": "income",
            "variable2": "purchase_amount",
            "sample_size": 30,
            "pearson": {
              "correlation": -0.7684369883168819,
              "p_value": 7.094947593613973e-07,
              "significant": "True"
            },
            "spearman": {
              "correlation": -0.7566184649610679,
              "p_value": 1.3148348922888633e-06,
              "significant": "True"
            },
            "interpretation": "Strong"
          },
          {
            "variable1": "income",
            "variable2": "last_visit_days",
            "sample_size": 30,
            "pearson": {
              "correlation": 0.853576932729441,
              "p_value": 2.0355311218156506e-09,
              "significant": "True"
            },
            "spearman": {
              "correlation": 0.8177908586638815,
              "p_value": 3.4397390247859104e-08,
              "significant": "True"
            },
            "interpretation": "Strong"
          },
          {
            "variable1": "income",
            "variable2": "total_visits",
            "sample_size": 30,
            "pearson": {
              "correlation": 0.8920437870365524,
              "p_value": 3.655582693053402e-11,
              "significant": "True"
            },
            "spearman": {
              "correlation": 0.921998493564717,
              "p_value": 4.668950898485554e-13,
              "significant": "True"
            },
            "interpretation": "Strong"
          },
          {
            "variable1": "spending_score",
            "variable2": "purchase_amount",
            "sample_size": 30,
            "pearson": {
              "correlation": 0.8346813349375377,
              "p_value": 9.845005421639088e-09,
              "significant": "True"
            },
            "spearman": {
              "correlation": 0.7926585094549499,
              "p_value": 1.7773295136748837e-07,
              "significant": "True"
            },
            "interpretation": "Strong"
          },
          {
            "variable1": "spending_score",
            "variable2": "last_visit_days",
            "sample_size": 30,
            "pearson": {
              "correlation": -0.8666966945011629,
              "p_value": 5.953110930342456e-10,
              "significant": "True"
            },
            "spearman": {
              "correlation": -0.8392822143802059,
              "p_value": 6.83374866928525e-09,
              "significant": "True"
            },
            "interpretation": "Strong"
          },
          {
            "variable1": "spending_score",
            "variable2": "total_visits",
            "sample_size": 30,
            "pearson": {
              "correlation": -0.9163972157591355,
              "p_value": 1.1900521052430461e-12,
              "significant": "True"
            },
            "spearman": {
              "correlation": -0.954267328121049,
              "p_value": 3.238557691638105e-16,
              "significant": "True"
            },
            "interpretation": "Very strong"
          },
          {
            "variable1": "purchase_amount",
            "variable2": "last_visit_days",
            "sample_size": 30,
            "pearson": {
              "correlation": -0.8323739452447929,
              "p_value": 1.1774252951476558e-08,
              "significant": "True"
            },
            "spearman": {
              "correlation": -0.8475653410625393,
              "p_value": 3.4384886109247184e-09,
              "significant": "True"
            },
            "interpretation": "Strong"
          },
          {
            "variable1": "purchase_amount",
            "variable2": "total_visits",
            "sample_size": 30,
            "pearson": {
              "correlation": -0.816471607685177,
              "p_value": 3.772338714306493e-08,
              "significant": "True"
            },
            "spearman": {
              "correlation": -0.8171804171782864,
              "p_value": 3.5901556220218505e-08,
              "significant": "True"
            },
            "interpretation": "Strong"
          },
          {
            "variable1": "last_visit_days",
            "variable2": "total_visits",
            "sample_size": 30,
            "pearson": {
              "correlation": 0.9068196672614612,
              "p_value": 5.1139945158752845e-12,
              "significant": "True"
            },
            "spearman": {
              "correlation": 0.8655398182790821,
              "p_value": 6.668751613457449e-10,
              "significant": "True"
            },
            "interpretation": "Very strong"
          }
        ],
        "strongest_correlation": {
          "variables": [
            "income",
            "spending_score"
          ],
          "correlation": -0.9731476596671973,
          "absolute_correlation": 0.9731476596671973
        }
      },
      "distribution_analysis": {
        "customer_id": {
          "sample_size": 30,
          "distribution_shape": {
            "skewness": 0.0,
            "kurtosis": -1.2000000000000002,
            "is_symmetric": "True",
            "is_normal_kurtosis": "False"
          },
          "normality_tests": {
            "shapiro_wilk": {
              "statistic": 0.9574505592737165,
              "p_value": 0.2662326827959302,
              "is_normal": "True"
            },
            "dagostino": {
              "statistic": 6.499221639570191,
              "p_value": 0.038789300923034474,
              "is_normal": "False"
            },
            "jarque_bera": {
              "statistic": 1.8080178074513649,
              "p_value": 0.40494302380885283,
              "is_normal": "True"
            },
            "kolmogorov_smirnov": {
              "statistic": 0.06984922181029063,
              "p_value": 0.9963081256327181,
              "is_normal": "True"
            }
          },
          "likely_normal": true,
          "distribution_recommendations": [
            "Unknown - consider non-parametric methods"
          ]
        },
        "age": {
          "sample_size": 30,
          "distribution_shape": {
            "skewness": 0.3330392421362846,
            "kurtosis": -0.9747875423089098,
            "is_symmetric": "True",
            "is_normal_kurtosis": "False"
          },
          "normality_tests": {
            "shapiro_wilk": {
              "statistic": 0.9569099220986056,
              "p_value": 0.2577317641970306,
              "is_normal": "True"
            },
            "dagostino": {
              "statistic": 3.2593611659073813,
              "p_value": 0.19599216736890374,
              "is_normal": "True"
            },
            "jarque_bera": {
              "statistic": 1.7831778722690568,
              "p_value": 0.41000376510848235,
              "is_normal": "True"
            },
            "kolmogorov_smirnov": {
              "statistic": 0.10223658060084484,
              "p_value": 0.881155166304242,
              "is_normal": "True"
            }
          },
          "likely_normal": true,
          "distribution_recommendations": [
            "Unknown - consider non-parametric methods"
          ]
        },
        "income": {
          "sample_size": 30,
          "distribution_shape": {
            "skewness": 0.1117955224386666,
            "kurtosis": -0.8336762112591152,
            "is_symmetric": "True",
            "is_normal_kurtosis": "False"
          },
          "normality_tests": {
            "shapiro_wilk": {
              "statistic": 0.9756672361764264,
              "p_value": 0.7023877364042004,
              "is_normal": "True"
            },
            "dagostino": {
              "statistic": 1.6187190282992714,
              "p_value": 0.4451430827845715,
              "is_normal": "True"
            },
            "jarque_bera": {
              "statistic": 1.0567347242552507,
              "p_value": 0.5895667333359735,
              "is_normal": "True"
            },
            "kolmogorov_smirnov": {
              "statistic": 0.08426647741975707,
              "p_value": 0.9713031838734904,
              "is_normal": "True"
            }
          },
          "likely_normal": true,
          "distribution_recommendations": [
            "Unknown - consider non-parametric methods"
          ]
        },
        "spending_score": {
          "sample_size": 30,
          "distribution_shape": {
            "skewness": -0.1954049876532426,
            "kurtosis": -1.1691209273961252,
            "is_symmetric": "True",
            "is_normal_kurtosis": "False"
          },
          "normality_tests": {
            "shapiro_wilk": {
              "statistic": 0.952845591065753,
              "p_value": 0.20137302791757664,
              "is_normal": "True"
            },
            "dagostino": {
              "statistic": 5.151977316308091,
              "p_value": 0.07607856990656105,
              "is_normal": "True"
            },
            "jarque_bera": {
              "statistic": 1.9028289878627351,
              "p_value": 0.3861943673358406,
              "is_normal": "True"
            },
            "kolmogorov_smirnov": {
              "statistic": 0.09020996045749219,
              "p_value": 0.9492732256099351,
              "is_normal": "True"
            }
          },
          "likely_normal": true,
          "distribution_recommendations": [
            "Uniform"
          ]
        },
        "purchase_amount": {
          "sample_size": 30,
          "distribution_shape": {
            "skewness": 0.09737676656941326,
            "kurtosis": -0.993963000501334,
            "is_symmetric": "True",
            "is_normal_kurtosis": "False"
          },
          "normality_tests": {
            "shapiro_wilk": {
              "statistic": 0.9546579340820636,
              "p_value": 0.22491799123607667,
              "is_normal": "True"
            },
            "dagostino": {
              "statistic": 2.82759406099419,
              "p_value": 0.24321802139685492,
              "is_normal": "True"
            },
            "jarque_bera": {
              "statistic": 1.3673205410651403,
              "p_value": 0.5047660267012115,
              "is_normal": "True"
            },
            "kolmogorov_smirnov": {
              "statistic": 0.125790768127015,
              "p_value": 0.683098404727968,
              "is_normal": "True"
            }
          },
          "likely_normal": true,
          "distribution_recommendations": [
            "Unknown - consider non-parametric methods"
          ]
        },
        "last_visit_days": {
          "sample_size": 30,
          "distribution_shape": {
            "skewness": 1.0377016961565935,
            "kurtosis": 0.40853785663445663,
            "is_symmetric": "False",
            "is_normal_kurtosis": "True"
          },
          "normality_tests": {
            "shapiro_wilk": {
              "statistic": 0.8947267010988463,
              "p_value": 0.00625583185603443,
              "is_normal": "False"
            },
            "dagostino": {
              "statistic": 5.917674485226984,
              "p_value": 0.05187920504472105,
              "is_normal": "True"
            },
            "jarque_bera": {
              "statistic": 4.880027221276693,
              "p_value": 0.08715966515522727,
              "is_normal": "True"
            },
            "kolmogorov_smirnov": {
              "statistic": 0.16820933577941494,
              "p_value": 0.32655193339555955,
              "is_normal": "True"
            }
          },
          "likely_normal": true,
          "distribution_recommendations": [
            "Log-normal"
          ]
        },
        "total_visits": {
          "sample_size": 30,
          "distribution_shape": {
            "skewness": 0.9198295548822573,
            "kurtosis": 0.11333041607875538,
            "is_symmetric": "False",
            "is_normal_kurtosis": "True"
          },
          "normality_tests": {
            "shapiro_wilk": {
              "statistic": 0.9184085856851574,
              "p_value": 0.02439356319888134,
              "is_normal": "False"
            },
            "dagostino": {
              "statistic": 4.557750824836772,
              "p_value": 0.10239929896773407,
              "is_normal": "True"
            },
            "jarque_bera": {
              "statistic": 3.824316497224295,
              "p_value": 0.14776113694059187,
              "is_normal": "True"
            },
            "kolmogorov_smirnov": {
              "statistic": 0.15637393611391182,
              "p_value": 0.41313231687787844,
              "is_normal": "True"
            }
          },
          "likely_normal": true,
          "distribution_recommendations": [
            "Unknown - consider non-parametric methods"
          ]
        }
      },
      "hypothesis_tests": {
        "two_sample_tests": [
          {
            "variable1": "customer_id",
            "variable2": "age",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": -8.82964846561487,
              "p_value": 2.5358683952342725e-12,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 44.0,
              "p_value": 2.00994755836277e-09,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "customer_id",
            "variable2": "income",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": -15.402320222432216,
              "p_value": 3.705030609713725e-22,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 0.0,
              "p_value": 3.0198593591621564e-11,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "customer_id",
            "variable2": "spending_score",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": -15.413095289353077,
              "p_value": 3.5857321366666583e-22,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 0.0,
              "p_value": 3.0198593591621564e-11,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "customer_id",
            "variable2": "purchase_amount",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": -14.439371359319106,
              "p_value": 7.312520569859295e-21,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 0.0,
              "p_value": 3.0198593591621564e-11,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "customer_id",
            "variable2": "last_visit_days",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": 6.129078098692025,
              "p_value": 8.341052820237256e-08,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 768.0,
              "p_value": 2.5783412895575888e-06,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "customer_id",
            "variable2": "total_visits",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": -6.816160897239899,
              "p_value": 5.963788652593409e-09,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 37.0,
              "p_value": 1.0662152851172078e-09,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "age",
            "variable2": "income",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": -15.39660875643339,
              "p_value": 3.769889109636846e-22,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 0.0,
              "p_value": 3.006634138511715e-11,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "age",
            "variable2": "spending_score",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": -10.547577860903257,
              "p_value": 4.147113285310407e-15,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 19.5,
              "p_value": 2.0391508159366083e-10,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "age",
            "variable2": "purchase_amount",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": -12.564039663950858,
              "p_value": 3.407138155123521e-18,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 0.0,
              "p_value": 3.006634138511715e-11,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "age",
            "variable2": "last_visit_days",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": 21.226273024056034,
              "p_value": 5.0042891582631664e-29,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 900.0,
              "p_value": 2.902719378174861e-11,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "age",
            "variable2": "total_visits",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": -5.21324766491145,
              "p_value": 2.582434141383001e-06,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 135.0,
              "p_value": 3.30338499043111e-06,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "income",
            "variable2": "spending_score",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": 15.386430144879716,
              "p_value": 3.8883414945591433e-22,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 900.0,
              "p_value": 3.0198593591621564e-11,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "income",
            "variable2": "purchase_amount",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": 15.360491605452069,
              "p_value": 4.2075386982561345e-22,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 900.0,
              "p_value": 3.0198593591621564e-11,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "income",
            "variable2": "last_visit_days",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": 15.405782140065366,
              "p_value": 3.666269079108587e-22,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 900.0,
              "p_value": 2.915527021579793e-11,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "income",
            "variable2": "total_visits",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": 15.378357401640356,
              "p_value": 3.9849635219772823e-22,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 900.0,
              "p_value": 3.0141849228072565e-11,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "spending_score",
            "variable2": "purchase_amount",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": -8.685857977298404,
              "p_value": 4.3905181233276176e-12,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 30.0,
              "p_value": 5.572653248454238e-10,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "spending_score",
            "variable2": "last_visit_days",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": 21.228901687295995,
              "p_value": 4.9724791619313526e-29,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 900.0,
              "p_value": 2.915527021579793e-11,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "spending_score",
            "variable2": "total_visits",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": -2.234206476200799,
              "p_value": 0.029338477577675447,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 367.5,
              "p_value": 0.22531790779333916,
              "significant_difference": "False"
            }
          },
          {
            "variable1": "purchase_amount",
            "variable2": "last_visit_days",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": 15.856733997926133,
              "p_value": 9.432532979403765e-23,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 900.0,
              "p_value": 2.915527021579793e-11,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "purchase_amount",
            "variable2": "total_visits",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": 3.993283943836284,
              "p_value": 0.00018579790179071792,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 709.0,
              "p_value": 0.00013240952639601022,
              "significant_difference": "True"
            }
          },
          {
            "variable1": "last_visit_days",
            "variable2": "total_visits",
            "sample1_size": 30,
            "sample2_size": 30,
            "t_test": {
              "statistic": -7.878906443704437,
              "p_value": 9.77578225606643e-11,
              "significant_difference": "True"
            },
            "mann_whitney_u": {
              "statistic": 1.5,
              "p_value": 3.3808179940204115e-11,
              "significant_difference": "True"
            }
          }
        ],
        "one_sample_tests": [
          {
            "variable": "customer_id",
            "sample_size": 30,
            "sample_mean": 15.5,
            "t_test_vs_zero": {
              "statistic": 9.643650760992953,
              "p_value": 1.4935469986375142e-10,
              "significantly_different_from_zero": "True"
            }
          },
          {
            "variable": "age",
            "sample_size": 30,
            "sample_mean": 33.0,
            "t_test_vs_zero": {
              "statistic": 28.456444450585018,
              "p_value": 9.684851630284824e-23,
              "significantly_different_from_zero": "True"
            }
          },
          {
            "variable": "income",
            "sample_size": 30,
            "sample_mean": 47200.0,
            "t_test_vs_zero": {
              "statistic": 15.407381969860971,
              "p_value": 1.6793916577010489e-15,
              "significantly_different_from_zero": "True"
            }
          },
          {
            "variable": "spending_score",
            "sample_size": 30,
            "sample_mean": 64.16666666666667,
            "t_test_vs_zero": {
              "statistic": 23.609843748750055,
              "p_value": 1.7497577523166422e-20,
              "significantly_different_from_zero": "True"
            }
          },
          {
            "variable": "purchase_amount",
            "sample_size": 30,
            "sample_mean": 143.45666666666665,
            "t_test_vs_zero": {
              "statistic": 16.461509282478442,
              "p_value": 2.9819024947840874e-16,
              "significantly_different_from_zero": "True"
            }
          },
          {
            "variable": "last_visit_days",
            "sample_size": 30,
            "sample_mean": 4.9,
            "t_test_vs_zero": {
              "statistic": 7.674058615972847,
              "p_value": 1.8401332583007884e-08,
              "significantly_different_from_zero": "True"
            }
          },
          {
            "variable": "total_visits",
            "sample_size": 30,
            "sample_mean": 88.63333333333334,
            "t_test_vs_zero": {
              "statistic": 8.355066504728637,
              "p_value": 3.2895289451520193e-09,
              "significantly_different_from_zero": "True"
            }
          }
        ]
      },
      "outlier_analysis": {
        "customer_id": {
          "iqr_method": {
            "lower_bound": -13.5,
            "upper_bound": 44.5,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "z_score_method": {
            "threshold": 3.0,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "modified_z_score_method": {
            "threshold": 3.5,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "summary": {
            "total_values": 30,
            "methods_agree_count": 0,
            "any_method_outlier_count": 0
          }
        },
        "age": {
          "iqr_method": {
            "lower_bound": 13.375,
            "upper_bound": 52.375,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "z_score_method": {
            "threshold": 3.0,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "modified_z_score_method": {
            "threshold": 3.5,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "summary": {
            "total_values": 30,
            "methods_agree_count": 0,
            "any_method_outlier_count": 0
          }
        },
        "income": {
          "iqr_method": {
            "lower_bound": -7250.0,
            "upper_bound": 100750.0,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "z_score_method": {
            "threshold": 3.0,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "modified_z_score_method": {
            "threshold": 3.5,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "summary": {
            "total_values": 30,
            "methods_agree_count": 0,
            "any_method_outlier_count": 0
          }
        },
        "spending_score": {
          "iqr_method": {
            "lower_bound": 13.625,
            "upper_bound": 114.625,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "z_score_method": {
            "threshold": 3.0,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "modified_z_score_method": {
            "threshold": 3.5,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "summary": {
            "total_values": 30,
            "methods_agree_count": 0,
            "any_method_outlier_count": 0
          }
        },
        "purchase_amount": {
          "iqr_method": {
            "lower_bound": -31.200000000000003,
            "upper_bound": 309.40000000000003,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "z_score_method": {
            "threshold": 3.0,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "modified_z_score_method": {
            "threshold": 3.5,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "summary": {
            "total_values": 30,
            "methods_agree_count": 0,
            "any_method_outlier_count": 0
          }
        },
        "last_visit_days": {
          "iqr_method": {
            "lower_bound": -5.125,
            "upper_bound": 13.875,
            "outlier_count": 1,
            "outlier_percentage": 3.33,
            "outlier_values": [
              14
            ]
          },
          "z_score_method": {
            "threshold": 3.0,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "modified_z_score_method": {
            "threshold": 3.5,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "summary": {
            "total_values": 30,
            "methods_agree_count": 0,
            "any_method_outlier_count": 1
          }
        },
        "total_visits": {
          "iqr_method": {
            "lower_bound": -67.875,
            "upper_bound": 233.125,
            "outlier_count": 1,
            "outlier_percentage": 3.33,
            "outlier_values": [
              234
            ]
          },
          "z_score_method": {
            "threshold": 3.0,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "modified_z_score_method": {
            "threshold": 3.5,
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "outlier_values": []
          },
          "summary": {
            "total_values": 30,
            "methods_agree_count": 0,
            "any_method_outlier_count": 1
          }
        }
      },
      "temporal_patterns": {
        "message": "No temporal columns identified"
      },
      "categorical_analysis": {
        "gender": {
          "unique_values": 2,
          "most_frequent": {
            "value": "Female",
            "count": 15,
            "percentage": 50.0
          },
          "value_distribution": {
            "Female": 15,
            "Male": 15
          },
          "entropy": 1.0,
          "concentration_ratio": 1.0,
          "uniformity_test": {
            "chi2_statistic": 0.0,
            "p_value": 1.0,
            "is_uniform": "True"
          }
        },
        "membership_tier": {
          "unique_values": 4,
          "most_frequent": {
            "value": "Bronze",
            "count": 10,
            "percentage": 33.33
          },
          "value_distribution": {
            "Bronze": 10,
            "Silver": 10,
            "Gold": 6,
            "Platinum": 4
          },
          "entropy": 1.9086126988727123,
          "concentration_ratio": 0.867,
          "uniformity_test": {
            "chi2_statistic": 3.6,
            "p_value": 0.308022171558994,
            "is_uniform": "True"
          }
        },
        "preferred_category": {
          "unique_values": 6,
          "most_frequent": {
            "value": "Electronics",
            "count": 6,
            "percentage": 20.0
          },
          "value_distribution": {
            "Electronics": 6,
            "Clothing": 5,
            "Home": 5,
            "Sports": 5,
            "Beauty": 5,
            "Books": 4
          },
          "entropy": 2.575279365539379,
          "concentration_ratio": 0.533,
          "uniformity_test": {
            "chi2_statistic": 0.4,
            "p_value": 0.9953295932358704,
            "is_uniform": "True"
          }
        },
        "association_tests": [
          {
            "variable1": "gender",
            "variable2": "membership_tier",
            "chi2_statistic": 5.066666666666666,
            "p_value": 0.16698006794420736,
            "degrees_of_freedom": 3,
            "significant_association": "False",
            "cramers_v": 0.4109609335312651
          },
          {
            "variable1": "gender",
            "variable2": "preferred_category",
            "chi2_statistic": 11.4,
            "p_value": 0.04400128106819212,
            "degrees_of_freedom": 5,
            "significant_association": "True",
            "cramers_v": 0.6164414002968976
          },
          {
            "variable1": "membership_tier",
            "variable2": "preferred_category",
            "chi2_statistic": 32.358333333333334,
            "p_value": 0.005752280534447322,
            "degrees_of_freedom": 15,
            "significant_association": "True",
            "cramers_v": 0.5996140734147566
          }
        ]
      },
      "analysis_metadata": {
        "timestamp": "2025-08-09T02:33:24.453114",
        "scipy_available": true,
        "data_shape": [
          30,
          10
        ]
      }
    },
    "data_quality_assessment": {
      "overview": {
        "overall_quality_score": 1.0,
        "quality_grade": "Excellent",
        "component_scores": {
          "completeness": 1.0,
          "uniqueness": 1.0,
          "validity": 1.0,
          "consistency": 1.0
        },
        "score_weights": {
          "completeness": 0.3,
          "uniqueness": 0.2,
          "validity": 0.3,
          "consistency": 0.2
        },
        "assessment_summary": "Data quality is excellent with minimal issues"
      },
      "completeness": {
        "overall": {
          "completeness_rate": 1.0,
          "missing_cells": 0,
          "total_cells": 300,
          "missing_percentage": 0.0
        },
        "by_column": [
          {
            "column_name": "customer_id",
            "completeness_rate": 1.0,
            "missing_count": 0,
            "total_count": 30,
            "missing_percentage": 0.0,
            "quality_level": "excellent"
          },
          {
            "column_name": "age",
            "completeness_rate": 1.0,
            "missing_count": 0,
            "total_count": 30,
            "missing_percentage": 0.0,
            "quality_level": "excellent"
          },
          {
            "column_name": "income",
            "completeness_rate": 1.0,
            "missing_count": 0,
            "total_count": 30,
            "missing_percentage": 0.0,
            "quality_level": "excellent"
          },
          {
            "column_name": "spending_score",
            "completeness_rate": 1.0,
            "missing_count": 0,
            "total_count": 30,
            "missing_percentage": 0.0,
            "quality_level": "excellent"
          },
          {
            "column_name": "purchase_amount",
            "completeness_rate": 1.0,
            "missing_count": 0,
            "total_count": 30,
            "missing_percentage": 0.0,
            "quality_level": "excellent"
          },
          {
            "column_name": "gender",
            "completeness_rate": 1.0,
            "missing_count": 0,
            "total_count": 30,
            "missing_percentage": 0.0,
            "quality_level": "excellent"
          },
          {
            "column_name": "membership_tier",
            "completeness_rate": 1.0,
            "missing_count": 0,
            "total_count": 30,
            "missing_percentage": 0.0,
            "quality_level": "excellent"
          },
          {
            "column_name": "last_visit_days",
            "completeness_rate": 1.0,
            "missing_count": 0,
            "total_count": 30,
            "missing_percentage": 0.0,
            "quality_level": "excellent"
          },
          {
            "column_name": "total_visits",
            "completeness_rate": 1.0,
            "missing_count": 0,
            "total_count": 30,
            "missing_percentage": 0.0,
            "quality_level": "excellent"
          },
          {
            "column_name": "preferred_category",
            "completeness_rate": 1.0,
            "missing_count": 0,
            "total_count": 30,
            "missing_percentage": 0.0,
            "quality_level": "excellent"
          }
        ],
        "by_row": {
          "complete_rows": 30,
          "rows_with_missing": 0,
          "complete_row_percentage": 100.0
        },
        "missing_patterns": {
          "correlated_missingness": [],
          "common_patterns": [
            {
              "pattern": [
                false,
                false,
                false,
                false,
                false,
                false,
                false,
                false,
                false,
                false
              ],
              "count": 30,
              "percentage": 100.0
            }
          ]
        }
      },
      "consistency": {
        "data_types": [
          {
            "column_name": "customer_id",
            "declared_type": "int64",
            "consistency_score": 1.0,
            "inconsistent_values": [],
            "recommendation": "Convert to appropriate numeric type"
          },
          {
            "column_name": "age",
            "declared_type": "int64",
            "consistency_score": 1.0,
            "inconsistent_values": [],
            "recommendation": "Convert to appropriate numeric type"
          },
          {
            "column_name": "income",
            "declared_type": "int64",
            "consistency_score": 1.0,
            "inconsistent_values": [],
            "recommendation": "Convert to appropriate numeric type"
          },
          {
            "column_name": "spending_score",
            "declared_type": "int64",
            "consistency_score": 1.0,
            "inconsistent_values": [],
            "recommendation": "Convert to appropriate numeric type"
          },
          {
            "column_name": "purchase_amount",
            "declared_type": "float64",
            "consistency_score": 1.0,
            "inconsistent_values": [],
            "recommendation": "Convert to appropriate numeric type"
          },
          {
            "column_name": "gender",
            "declared_type": "object",
            "consistency_score": 1.0,
            "inconsistent_values": [],
            "recommendation": "Standardize string format"
          },
          {
            "column_name": "membership_tier",
            "declared_type": "object",
            "consistency_score": 1.0,
            "inconsistent_values": [],
            "recommendation": "Standardize string format"
          },
          {
            "column_name": "last_visit_days",
            "declared_type": "int64",
            "consistency_score": 1.0,
            "inconsistent_values": [],
            "recommendation": "Convert to appropriate numeric type"
          },
          {
            "column_name": "total_visits",
            "declared_type": "int64",
            "consistency_score": 1.0,
            "inconsistent_values": [],
            "recommendation": "Convert to appropriate numeric type"
          },
          {
            "column_name": "preferred_category",
            "declared_type": "object",
            "consistency_score": 1.0,
            "inconsistent_values": [],
            "recommendation": "Standardize string format"
          }
        ],
        "text_formats": [],
        "numeric_ranges": [
          {
            "min_value": 1.0,
            "max_value": 30.0,
            "range_span": 29.0,
            "potential_issues": [],
            "column_name": "customer_id"
          },
          {
            "min_value": 23.0,
            "max_value": 45.0,
            "range_span": 22.0,
            "potential_issues": [],
            "column_name": "age"
          },
          {
            "min_value": 15000.0,
            "max_value": 78000.0,
            "range_span": 63000.0,
            "potential_issues": [],
            "column_name": "income"
          },
          {
            "min_value": 38.0,
            "max_value": 88.0,
            "range_span": 50.0,
            "potential_issues": [],
            "column_name": "spending_score"
          },
          {
            "min_value": 67.9,
            "max_value": 245.8,
            "range_span": 177.9,
            "potential_issues": [],
            "column_name": "purchase_amount"
          },
          {
            "min_value": 1.0,
            "max_value": 14.0,
            "range_span": 13.0,
            "potential_issues": [],
            "column_name": "last_visit_days"
          },
          {
            "min_value": 12.0,
            "max_value": 234.0,
            "range_span": 222.0,
            "potential_issues": [],
            "column_name": "total_visits"
          }
        ]
      },
      "validity": {
        "email_validation": [],
        "phone_validation": [],
        "date_validation": [],
        "numeric_ranges": [
          {
            "total_values": 30,
            "out_of_range_count": 0,
            "out_of_range_percentage": 0.0,
            "validation_rules": [],
            "column_name": "customer_id"
          },
          {
            "total_values": 30,
            "out_of_range_count": 0,
            "out_of_range_percentage": 0.0,
            "validation_rules": [
              "Age should be between 0 and 150"
            ],
            "column_name": "age"
          },
          {
            "total_values": 30,
            "out_of_range_count": 0,
            "out_of_range_percentage": 0.0,
            "validation_rules": [],
            "column_name": "income"
          },
          {
            "total_values": 30,
            "out_of_range_count": 0,
            "out_of_range_percentage": 0.0,
            "validation_rules": [],
            "column_name": "spending_score"
          },
          {
            "total_values": 30,
            "out_of_range_count": 0,
            "out_of_range_percentage": 0.0,
            "validation_rules": [
              "Price/cost/amount should be non-negative"
            ],
            "column_name": "purchase_amount"
          },
          {
            "total_values": 30,
            "out_of_range_count": 0,
            "out_of_range_percentage": 0.0,
            "validation_rules": [],
            "column_name": "last_visit_days"
          },
          {
            "total_values": 30,
            "out_of_range_count": 0,
            "out_of_range_percentage": 0.0,
            "validation_rules": [],
            "column_name": "total_visits"
          }
        ]
      },
      "uniqueness": {
        "overall": {
          "total_rows": 30,
          "duplicate_rows": 0,
          "unique_rows": 30,
          "uniqueness_rate": 1.0,
          "duplicate_percentage": 0.0
        },
        "by_column": [
          {
            "column_name": "customer_id",
            "unique_values": 30,
            "total_values": 30,
            "uniqueness_rate": 1.0,
            "duplicate_count": 0,
            "is_likely_identifier": true,
            "uniqueness_expectation": "high",
            "quality_assessment": "excellent"
          },
          {
            "column_name": "age",
            "unique_values": 23,
            "total_values": 30,
            "uniqueness_rate": 0.767,
            "duplicate_count": 7,
            "is_likely_identifier": false,
            "uniqueness_expectation": "varies",
            "quality_assessment": "moderate_diversity"
          },
          {
            "column_name": "income",
            "unique_values": 30,
            "total_values": 30,
            "uniqueness_rate": 1.0,
            "duplicate_count": 0,
            "is_likely_identifier": false,
            "uniqueness_expectation": "varies",
            "quality_assessment": "high_diversity"
          },
          {
            "column_name": "spending_score",
            "unique_values": 30,
            "total_values": 30,
            "uniqueness_rate": 1.0,
            "duplicate_count": 0,
            "is_likely_identifier": false,
            "uniqueness_expectation": "varies",
            "quality_assessment": "high_diversity"
          },
          {
            "column_name": "purchase_amount",
            "unique_values": 30,
            "total_values": 30,
            "uniqueness_rate": 1.0,
            "duplicate_count": 0,
            "is_likely_identifier": false,
            "uniqueness_expectation": "varies",
            "quality_assessment": "high_diversity"
          },
          {
            "column_name": "gender",
            "unique_values": 2,
            "total_values": 30,
            "uniqueness_rate": 0.067,
            "duplicate_count": 28,
            "is_likely_identifier": false,
            "uniqueness_expectation": "varies",
            "quality_assessment": "low_diversity"
          },
          {
            "column_name": "membership_tier",
            "unique_values": 4,
            "total_values": 30,
            "uniqueness_rate": 0.133,
            "duplicate_count": 26,
            "is_likely_identifier": false,
            "uniqueness_expectation": "varies",
            "quality_assessment": "low_diversity"
          },
          {
            "column_name": "last_visit_days",
            "unique_values": 13,
            "total_values": 30,
            "uniqueness_rate": 0.433,
            "duplicate_count": 17,
            "is_likely_identifier": false,
            "uniqueness_expectation": "varies",
            "quality_assessment": "low_diversity"
          },
          {
            "column_name": "total_visits",
            "unique_values": 27,
            "total_values": 30,
            "uniqueness_rate": 0.9,
            "duplicate_count": 3,
            "is_likely_identifier": false,
            "uniqueness_expectation": "varies",
            "quality_assessment": "high_diversity"
          },
          {
            "column_name": "preferred_category",
            "unique_values": 6,
            "total_values": 30,
            "uniqueness_rate": 0.2,
            "duplicate_count": 24,
            "is_likely_identifier": false,
            "uniqueness_expectation": "varies",
            "quality_assessment": "low_diversity"
          }
        ],
        "composite_key_candidates": [
          {
            "columns": [
              "customer_id",
              "age"
            ],
            "uniqueness_rate": 1.0,
            "is_potential_key": true
          },
          {
            "columns": [
              "customer_id",
              "income"
            ],
            "uniqueness_rate": 1.0,
            "is_potential_key": true
          },
          {
            "columns": [
              "customer_id",
              "spending_score"
            ],
            "uniqueness_rate": 1.0,
            "is_potential_key": true
          },
          {
            "columns": [
              "customer_id",
              "purchase_amount"
            ],
            "uniqueness_rate": 1.0,
            "is_potential_key": true
          },
          {
            "columns": [
              "customer_id",
              "gender"
            ],
            "uniqueness_rate": 1.0,
            "is_potential_key": true
          }
        ]
      },
      "accuracy": {
        "outlier_analysis": [
          {
            "column_name": "customer_id",
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "potential_accuracy_issues": false,
            "outlier_values": []
          },
          {
            "column_name": "age",
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "potential_accuracy_issues": false,
            "outlier_values": []
          },
          {
            "column_name": "income",
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "potential_accuracy_issues": false,
            "outlier_values": []
          },
          {
            "column_name": "spending_score",
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "potential_accuracy_issues": false,
            "outlier_values": []
          },
          {
            "column_name": "purchase_amount",
            "outlier_count": 0,
            "outlier_percentage": 0.0,
            "potential_accuracy_issues": false,
            "outlier_values": []
          },
          {
            "column_name": "last_visit_days",
            "outlier_count": 1,
            "outlier_percentage": 3.33,
            "potential_accuracy_issues": false,
            "outlier_values": [
              14
            ]
          },
          {
            "column_name": "total_visits",
            "outlier_count": 1,
            "outlier_percentage": 3.33,
            "potential_accuracy_issues": false,
            "outlier_values": [
              234
            ]
          }
        ],
        "cross_field_validation": [],
        "distribution_analysis": [
          {
            "column_name": "gender",
            "unique_values": 2,
            "most_common_value": "Female",
            "most_common_frequency": 15,
            "suspicious_patterns": [],
            "accuracy_concern_level": "low"
          },
          {
            "column_name": "membership_tier",
            "unique_values": 4,
            "most_common_value": "Bronze",
            "most_common_frequency": 10,
            "suspicious_patterns": [],
            "accuracy_concern_level": "low"
          },
          {
            "column_name": "preferred_category",
            "unique_values": 6,
            "most_common_value": "Electronics",
            "most_common_frequency": 6,
            "suspicious_patterns": [],
            "accuracy_concern_level": "low"
          }
        ]
      },
      "anomalies": {
        "isolation_forest": {
          "method": "Isolation Forest",
          "total_records": 30,
          "anomaly_count": 3,
          "anomaly_percentage": 10.0,
          "anomalous_record_indices": [
            10,
            11,
            22
          ]
        },
        "dbscan_clustering": {
          "method": "DBSCAN Clustering",
          "total_records": 30,
          "noise_points": 30,
          "noise_percentage": 100.0,
          "clusters_found": 0,
          "noise_point_indices": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19
          ]
        },
        "text_anomalies": [
          {
            "column_name": "gender",
            "anomaly_type": "unusual_length",
            "anomaly_count": 0,
            "anomaly_percentage": 0.0,
            "examples": []
          },
          {
            "column_name": "membership_tier",
            "anomaly_type": "unusual_length",
            "anomaly_count": 0,
            "anomaly_percentage": 0.0,
            "examples": []
          },
          {
            "column_name": "preferred_category",
            "anomaly_type": "unusual_length",
            "anomaly_count": 0,
            "anomaly_percentage": 0.0,
            "examples": []
          }
        ]
      },
      "data_profiling": {
        "column_patterns": [
          {
            "column_name": "customer_id",
            "data_type": "int64",
            "patterns": [
              {
                "pattern_type": "distribution",
                "mean": 15.5,
                "median": 15.5,
                "std": 8.803,
                "skewness": 0.0,
                "kurtosis": -1.2
              },
              {
                "pattern_type": "value_characteristics",
                "integer_rate": 1.0,
                "positive_rate": 1.0,
                "zero_rate": 0.0
              }
            ]
          },
          {
            "column_name": "age",
            "data_type": "int64",
            "patterns": [
              {
                "pattern_type": "distribution",
                "mean": 33.0,
                "median": 32.0,
                "std": 6.352,
                "skewness": 0.333,
                "kurtosis": -0.975
              },
              {
                "pattern_type": "value_characteristics",
                "integer_rate": 1.0,
                "positive_rate": 1.0,
                "zero_rate": 0.0
              }
            ]
          },
          {
            "column_name": "income",
            "data_type": "int64",
            "patterns": [
              {
                "pattern_type": "distribution",
                "mean": 47200.0,
                "median": 46500.0,
                "std": 16779.298,
                "skewness": 0.112,
                "kurtosis": -0.834
              },
              {
                "pattern_type": "value_characteristics",
                "integer_rate": 1.0,
                "positive_rate": 1.0,
                "zero_rate": 0.0
              }
            ]
          },
          {
            "column_name": "spending_score",
            "data_type": "int64",
            "patterns": [
              {
                "pattern_type": "distribution",
                "mean": 64.167,
                "median": 65.5,
                "std": 14.886,
                "skewness": -0.195,
                "kurtosis": -1.169
              },
              {
                "pattern_type": "value_characteristics",
                "integer_rate": 1.0,
                "positive_rate": 1.0,
                "zero_rate": 0.0
              }
            ]
          },
          {
            "column_name": "purchase_amount",
            "data_type": "float64",
            "patterns": [
              {
                "pattern_type": "distribution",
                "mean": 143.457,
                "median": 150.95,
                "std": 47.732,
                "skewness": 0.097,
                "kurtosis": -0.994
              },
              {
                "pattern_type": "value_characteristics",
                "integer_rate": 0.0,
                "positive_rate": 1.0,
                "zero_rate": 0.0
              }
            ]
          },
          {
            "column_name": "gender",
            "data_type": "object",
            "patterns": [
              {
                "pattern_type": "length_distribution",
                "min_length": 4,
                "max_length": 6,
                "avg_length": 5.0,
                "length_std": 1.0
              },
              {
                "pattern_type": "character_composition",
                "contains_numbers_rate": 0.0,
                "contains_special_chars_rate": 0.0,
                "all_caps_rate": 0.0,
                "all_lower_rate": 0.0
              }
            ]
          },
          {
            "column_name": "membership_tier",
            "data_type": "object",
            "patterns": [
              {
                "pattern_type": "length_distribution",
                "min_length": 4,
                "max_length": 8,
                "avg_length": 5.9,
                "length_std": 1.2
              },
              {
                "pattern_type": "character_composition",
                "contains_numbers_rate": 0.0,
                "contains_special_chars_rate": 0.0,
                "all_caps_rate": 0.0,
                "all_lower_rate": 0.0
              }
            ]
          },
          {
            "column_name": "last_visit_days",
            "data_type": "int64",
            "patterns": [
              {
                "pattern_type": "distribution",
                "mean": 4.9,
                "median": 4.0,
                "std": 3.497,
                "skewness": 1.038,
                "kurtosis": 0.409
              },
              {
                "pattern_type": "value_characteristics",
                "integer_rate": 1.0,
                "positive_rate": 1.0,
                "zero_rate": 0.0
              }
            ]
          },
          {
            "column_name": "total_visits",
            "data_type": "int64",
            "patterns": [
              {
                "pattern_type": "distribution",
                "mean": 88.633,
                "median": 75.5,
                "std": 58.104,
                "skewness": 0.92,
                "kurtosis": 0.113
              },
              {
                "pattern_type": "value_characteristics",
                "integer_rate": 1.0,
                "positive_rate": 1.0,
                "zero_rate": 0.0
              }
            ]
          },
          {
            "column_name": "preferred_category",
            "data_type": "object",
            "patterns": [
              {
                "pattern_type": "length_distribution",
                "min_length": 4,
                "max_length": 11,
                "avg_length": 6.9,
                "length_std": 2.4
              },
              {
                "pattern_type": "character_composition",
                "contains_numbers_rate": 0.0,
                "contains_special_chars_rate": 0.0,
                "all_caps_rate": 0.0,
                "all_lower_rate": 0.0
              }
            ]
          }
        ],
        "structure_patterns": {
          "has_header_row": true,
          "consistent_column_count": true,
          "nested_structure": false,
          "hierarchical_columns": false,
          "time_series_structure": false
        }
      },
      "recommendations": {
        "high_priority": [],
        "medium_priority": [],
        "low_priority": [],
        "data_cleaning_steps": [
          {
            "step": 1,
            "action": "Handle missing values",
            "methods": [
              "Remove rows/columns with high missingness",
              "Impute missing values",
              "Mark missing as explicit category"
            ]
          },
          {
            "step": 2,
            "action": "Remove duplicates",
            "methods": [
              "Identify exact duplicates",
              "Find near-duplicates",
              "Resolve record conflicts"
            ]
          },
          {
            "step": 3,
            "action": "Standardize formats",
            "methods": [
              "Normalize text cases",
              "Standardize date formats",
              "Clean numeric formats"
            ]
          },
          {
            "step": 4,
            "action": "Validate data types",
            "methods": [
              "Convert to appropriate types",
              "Handle type conversion errors",
              "Validate ranges"
            ]
          }
        ],
        "validation_rules": [
          {
            "rule_type": "completeness",
            "column": "customer_id",
            "rule": "required",
            "description": "Column should not be empty (currently 0.0% missing)"
          },
          {
            "rule_type": "completeness",
            "column": "age",
            "rule": "required",
            "description": "Column should not be empty (currently 0.0% missing)"
          },
          {
            "rule_type": "completeness",
            "column": "income",
            "rule": "required",
            "description": "Column should not be empty (currently 0.0% missing)"
          },
          {
            "rule_type": "completeness",
            "column": "spending_score",
            "rule": "required",
            "description": "Column should not be empty (currently 0.0% missing)"
          },
          {
            "rule_type": "completeness",
            "column": "purchase_amount",
            "rule": "required",
            "description": "Column should not be empty (currently 0.0% missing)"
          },
          {
            "rule_type": "completeness",
            "column": "gender",
            "rule": "required",
            "description": "Column should not be empty (currently 0.0% missing)"
          },
          {
            "rule_type": "completeness",
            "column": "membership_tier",
            "rule": "required",
            "description": "Column should not be empty (currently 0.0% missing)"
          },
          {
            "rule_type": "completeness",
            "column": "last_visit_days",
            "rule": "required",
            "description": "Column should not be empty (currently 0.0% missing)"
          },
          {
            "rule_type": "completeness",
            "column": "total_visits",
            "rule": "required",
            "description": "Column should not be empty (currently 0.0% missing)"
          },
          {
            "rule_type": "completeness",
            "column": "preferred_category",
            "rule": "required",
            "description": "Column should not be empty (currently 0.0% missing)"
          },
          {
            "rule_type": "uniqueness",
            "column": "customer_id",
            "rule": "unique",
            "description": "Column should contain unique values (identifier column)"
          }
        ]
      },
      "assessment_metadata": {
        "timestamp": "2025-08-09T02:33:24.552845",
        "sklearn_available": true,
        "data_shape": [
          30,
          10
        ],
        "total_cells": 300
      }
    },
    "feature_analysis": {
      "feature_analysis": {
        "feature_types": {
          "numeric_features": [
            "customer_id",
            "age",
            "income",
            "spending_score",
            "purchase_amount",
            "last_visit_days",
            "total_visits"
          ],
          "categorical_features": [
            "gender",
            "membership_tier",
            "preferred_category"
          ],
          "datetime_features": [
            "customer_id",
            "age",
            "income",
            "spending_score",
            "purchase_amount",
            "last_visit_days",
            "total_visits"
          ],
          "total_features": 10
        },
        "feature_quality": [
          {
            "completeness": 1.0,
            "uniqueness": 1.0,
            "data_type": "int64",
            "variance": 77.5,
            "skewness": 0.0,
            "feature_name": "customer_id"
          },
          {
            "completeness": 1.0,
            "uniqueness": 0.7666666666666667,
            "data_type": "int64",
            "variance": 40.3448275862069,
            "skewness": 0.3330392421362846,
            "feature_name": "age"
          },
          {
            "completeness": 1.0,
            "uniqueness": 1.0,
            "data_type": "int64",
            "variance": 281544827.5862069,
            "skewness": 0.1117955224386666,
            "feature_name": "income"
          },
          {
            "completeness": 1.0,
            "uniqueness": 1.0,
            "data_type": "int64",
            "variance": 221.5919540229885,
            "skewness": -0.1954049876532426,
            "feature_name": "spending_score"
          },
          {
            "completeness": 1.0,
            "uniqueness": 1.0,
            "data_type": "float64",
            "variance": 2278.3656436781607,
            "skewness": 0.09737676656941326,
            "feature_name": "purchase_amount"
          },
          {
            "completeness": 1.0,
            "uniqueness": 0.06666666666666667,
            "data_type": "object",
            "feature_name": "gender"
          },
          {
            "completeness": 1.0,
            "uniqueness": 0.13333333333333333,
            "data_type": "object",
            "feature_name": "membership_tier"
          },
          {
            "completeness": 1.0,
            "uniqueness": 0.43333333333333335,
            "data_type": "int64",
            "variance": 12.231034482758622,
            "skewness": 1.0377016961565935,
            "feature_name": "last_visit_days"
          },
          {
            "completeness": 1.0,
            "uniqueness": 0.9,
            "data_type": "int64",
            "variance": 3376.1022988505756,
            "skewness": 0.9198295548822573,
            "feature_name": "total_visits"
          },
          {
            "completeness": 1.0,
            "uniqueness": 0.2,
            "data_type": "object",
            "feature_name": "preferred_category"
          }
        ],
        "high_correlations": [
          {
            "feature1": "age",
            "feature2": "income",
            "correlation": 0.969,
            "strength": "very_high"
          },
          {
            "feature1": "age",
            "feature2": "spending_score",
            "correlation": -0.962,
            "strength": "very_high"
          },
          {
            "feature1": "age",
            "feature2": "last_visit_days",
            "correlation": 0.84,
            "strength": "high"
          },
          {
            "feature1": "age",
            "feature2": "total_visits",
            "correlation": 0.871,
            "strength": "high"
          },
          {
            "feature1": "income",
            "feature2": "spending_score",
            "correlation": -0.973,
            "strength": "very_high"
          },
          {
            "feature1": "income",
            "feature2": "last_visit_days",
            "correlation": 0.854,
            "strength": "high"
          },
          {
            "feature1": "income",
            "feature2": "total_visits",
            "correlation": 0.892,
            "strength": "high"
          },
          {
            "feature1": "spending_score",
            "feature2": "purchase_amount",
            "correlation": 0.835,
            "strength": "high"
          },
          {
            "feature1": "spending_score",
            "feature2": "last_visit_days",
            "correlation": -0.867,
            "strength": "high"
          },
          {
            "feature1": "spending_score",
            "feature2": "total_visits",
            "correlation": -0.916,
            "strength": "very_high"
          },
          {
            "feature1": "purchase_amount",
            "feature2": "last_visit_days",
            "correlation": -0.832,
            "strength": "high"
          },
          {
            "feature1": "purchase_amount",
            "feature2": "total_visits",
            "correlation": -0.816,
            "strength": "high"
          },
          {
            "feature1": "last_visit_days",
            "feature2": "total_visits",
            "correlation": 0.907,
            "strength": "very_high"
          }
        ]
      },
      "encoding_recommendations": {
        "categorical_encoding": [
          {
            "column_name": "gender",
            "unique_values": 2,
            "total_values": 30,
            "cardinality": "low",
            "recommended_encodings": [
              {
                "method": "Label Encoding",
                "reason": "Binary categorical variable",
                "priority": "high"
              }
            ]
          },
          {
            "column_name": "membership_tier",
            "unique_values": 4,
            "total_values": 30,
            "cardinality": "high",
            "recommended_encodings": [
              {
                "method": "One-Hot Encoding",
                "reason": "Low cardinality categorical variable",
                "priority": "high"
              },
              {
                "method": "Label Encoding",
                "reason": "Alternative for ordinal relationships",
                "priority": "medium"
              }
            ]
          },
          {
            "column_name": "preferred_category",
            "unique_values": 6,
            "total_values": 30,
            "cardinality": "high",
            "recommended_encodings": [
              {
                "method": "One-Hot Encoding",
                "reason": "Low cardinality categorical variable",
                "priority": "high"
              },
              {
                "method": "Label Encoding",
                "reason": "Alternative for ordinal relationships",
                "priority": "medium"
              }
            ]
          }
        ],
        "datetime_encoding": [],
        "text_encoding": []
      },
      "scaling_recommendations": {
        "scaling_recommendations": [
          {
            "column_name": "customer_id",
            "statistics": {
              "mean": 15.5,
              "std": 8.803,
              "min": 1.0,
              "max": 30.0,
              "range": 29.0,
              "skewness": 0.0
            },
            "recommended_scalers": [
              {
                "method": "StandardScaler",
                "reason": "Good for normally distributed data",
                "priority": "high",
                "use_case": "Most machine learning algorithms"
              },
              {
                "method": "MinMaxScaler",
                "reason": "Preserves original distribution shape, good for bounded data",
                "priority": "high",
                "use_case": "Neural networks, algorithms sensitive to feature scale"
              }
            ]
          },
          {
            "column_name": "age",
            "statistics": {
              "mean": 33.0,
              "std": 6.352,
              "min": 23.0,
              "max": 45.0,
              "range": 22.0,
              "skewness": 0.333
            },
            "recommended_scalers": [
              {
                "method": "StandardScaler",
                "reason": "Good for normally distributed data",
                "priority": "high",
                "use_case": "Most machine learning algorithms"
              },
              {
                "method": "MinMaxScaler",
                "reason": "Preserves original distribution shape, good for bounded data",
                "priority": "high",
                "use_case": "Neural networks, algorithms sensitive to feature scale"
              }
            ]
          },
          {
            "column_name": "income",
            "statistics": {
              "mean": 47200.0,
              "std": 16779.298,
              "min": 15000.0,
              "max": 78000.0,
              "range": 63000.0,
              "skewness": 0.112
            },
            "recommended_scalers": [
              {
                "method": "StandardScaler",
                "reason": "Good for normally distributed data",
                "priority": "high",
                "use_case": "Most machine learning algorithms"
              },
              {
                "method": "MinMaxScaler",
                "reason": "Preserves original distribution shape, good for bounded data",
                "priority": "high",
                "use_case": "Neural networks, algorithms sensitive to feature scale"
              }
            ]
          },
          {
            "column_name": "spending_score",
            "statistics": {
              "mean": 64.167,
              "std": 14.886,
              "min": 38.0,
              "max": 88.0,
              "range": 50.0,
              "skewness": -0.195
            },
            "recommended_scalers": [
              {
                "method": "StandardScaler",
                "reason": "Good for normally distributed data",
                "priority": "high",
                "use_case": "Most machine learning algorithms"
              },
              {
                "method": "MinMaxScaler",
                "reason": "Preserves original distribution shape, good for bounded data",
                "priority": "high",
                "use_case": "Neural networks, algorithms sensitive to feature scale"
              }
            ]
          },
          {
            "column_name": "purchase_amount",
            "statistics": {
              "mean": 143.457,
              "std": 47.732,
              "min": 67.9,
              "max": 245.8,
              "range": 177.9,
              "skewness": 0.097
            },
            "recommended_scalers": [
              {
                "method": "StandardScaler",
                "reason": "Good for normally distributed data",
                "priority": "high",
                "use_case": "Most machine learning algorithms"
              },
              {
                "method": "MinMaxScaler",
                "reason": "Preserves original distribution shape, good for bounded data",
                "priority": "high",
                "use_case": "Neural networks, algorithms sensitive to feature scale"
              }
            ]
          },
          {
            "column_name": "last_visit_days",
            "statistics": {
              "mean": 4.9,
              "std": 3.497,
              "min": 1.0,
              "max": 14.0,
              "range": 13.0,
              "skewness": 1.038
            },
            "recommended_scalers": [
              {
                "method": "StandardScaler",
                "reason": "Good for normally distributed data",
                "priority": "medium",
                "use_case": "Most machine learning algorithms"
              },
              {
                "method": "MinMaxScaler",
                "reason": "Preserves original distribution shape, good for bounded data",
                "priority": "high",
                "use_case": "Neural networks, algorithms sensitive to feature scale"
              }
            ]
          },
          {
            "column_name": "total_visits",
            "statistics": {
              "mean": 88.633,
              "std": 58.104,
              "min": 12.0,
              "max": 234.0,
              "range": 222.0,
              "skewness": 0.92
            },
            "recommended_scalers": [
              {
                "method": "StandardScaler",
                "reason": "Good for normally distributed data",
                "priority": "high",
                "use_case": "Most machine learning algorithms"
              },
              {
                "method": "MinMaxScaler",
                "reason": "Preserves original distribution shape, good for bounded data",
                "priority": "high",
                "use_case": "Neural networks, algorithms sensitive to feature scale"
              }
            ]
          }
        ]
      },
      "feature_creation_opportunities": {
        "mathematical_combinations": [
          {
            "feature1": "customer_id",
            "feature2": "age",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "customer_id / age",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "customer_id + age",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "customer_id - age",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "customer_id * age",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "customer_id",
            "feature2": "income",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "customer_id / income",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "customer_id + income",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "customer_id - income",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "customer_id * income",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "customer_id",
            "feature2": "spending_score",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "customer_id / spending_score",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "customer_id + spending_score",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "customer_id - spending_score",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "customer_id * spending_score",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "customer_id",
            "feature2": "purchase_amount",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "customer_id / purchase_amount",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "customer_id + purchase_amount",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "customer_id - purchase_amount",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "customer_id * purchase_amount",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "customer_id",
            "feature2": "last_visit_days",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "customer_id / last_visit_days",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "customer_id + last_visit_days",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "customer_id - last_visit_days",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "customer_id * last_visit_days",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "customer_id",
            "feature2": "total_visits",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "customer_id / total_visits",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "customer_id + total_visits",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "customer_id - total_visits",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "customer_id * total_visits",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "age",
            "feature2": "income",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "age / income",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "age + income",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "age - income",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "age * income",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "age",
            "feature2": "spending_score",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "age / spending_score",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "age + spending_score",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "age - spending_score",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "age * spending_score",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "age",
            "feature2": "purchase_amount",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "age / purchase_amount",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "age + purchase_amount",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "age - purchase_amount",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "age * purchase_amount",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "age",
            "feature2": "last_visit_days",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "age / last_visit_days",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "age + last_visit_days",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "age - last_visit_days",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "age * last_visit_days",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "age",
            "feature2": "total_visits",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "age / total_visits",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "age + total_visits",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "age - total_visits",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "age * total_visits",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "income",
            "feature2": "spending_score",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "income / spending_score",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "income + spending_score",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "income - spending_score",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "income * spending_score",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "income",
            "feature2": "purchase_amount",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "income / purchase_amount",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "income + purchase_amount",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "income - purchase_amount",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "income * purchase_amount",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "income",
            "feature2": "last_visit_days",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "income / last_visit_days",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "income + last_visit_days",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "income - last_visit_days",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "income * last_visit_days",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "income",
            "feature2": "total_visits",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "income / total_visits",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "income + total_visits",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "income - total_visits",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "income * total_visits",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "spending_score",
            "feature2": "purchase_amount",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "spending_score / purchase_amount",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "spending_score + purchase_amount",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "spending_score - purchase_amount",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "spending_score * purchase_amount",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "spending_score",
            "feature2": "last_visit_days",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "spending_score / last_visit_days",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "spending_score + last_visit_days",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "spending_score - last_visit_days",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "spending_score * last_visit_days",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "spending_score",
            "feature2": "total_visits",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "spending_score / total_visits",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "spending_score + total_visits",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "spending_score - total_visits",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "spending_score * total_visits",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "purchase_amount",
            "feature2": "last_visit_days",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "purchase_amount / last_visit_days",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "purchase_amount + last_visit_days",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "purchase_amount - last_visit_days",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "purchase_amount * last_visit_days",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "purchase_amount",
            "feature2": "total_visits",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "purchase_amount / total_visits",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "purchase_amount + total_visits",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "purchase_amount - total_visits",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "purchase_amount * total_visits",
                "use_case": "Interaction effect"
              }
            ]
          },
          {
            "feature1": "last_visit_days",
            "feature2": "total_visits",
            "suggested_operations": [
              {
                "operation": "ratio",
                "formula": "last_visit_days / total_visits",
                "use_case": "Relative comparison"
              },
              {
                "operation": "sum",
                "formula": "last_visit_days + total_visits",
                "use_case": "Total or combined effect"
              },
              {
                "operation": "difference",
                "formula": "last_visit_days - total_visits",
                "use_case": "Change or gap analysis"
              },
              {
                "operation": "product",
                "formula": "last_visit_days * total_visits",
                "use_case": "Interaction effect"
              }
            ]
          }
        ],
        "datetime_features": [],
        "text_features": [],
        "interaction_features": [
          {
            "feature1": "gender",
            "feature2": "membership_tier",
            "interaction_type": "categorical_combination",
            "formula": "gender + '_' + membership_tier",
            "use_case": "Capture combined effect of categories"
          },
          {
            "feature1": "gender",
            "feature2": "preferred_category",
            "interaction_type": "categorical_combination",
            "formula": "gender + '_' + preferred_category",
            "use_case": "Capture combined effect of categories"
          },
          {
            "feature1": "membership_tier",
            "feature2": "preferred_category",
            "interaction_type": "categorical_combination",
            "formula": "membership_tier + '_' + preferred_category",
            "use_case": "Capture combined effect of categories"
          }
        ],
        "binning_opportunities": [
          {
            "column_name": "customer_id",
            "binning_strategies": [
              {
                "method": "equal_width",
                "bins": 5,
                "use_case": "Simple categorization"
              },
              {
                "method": "equal_frequency",
                "bins": 5,
                "use_case": "Balanced categories"
              },
              {
                "method": "quantile_based",
                "quantiles": [
                  0,
                  0.25,
                  0.5,
                  0.75,
                  1.0
                ],
                "use_case": "Statistical quartiles"
              },
              {
                "method": "custom_business",
                "example": "age groups, income brackets",
                "use_case": "Domain-specific categories"
              }
            ]
          },
          {
            "column_name": "age",
            "binning_strategies": [
              {
                "method": "equal_width",
                "bins": 5,
                "use_case": "Simple categorization"
              },
              {
                "method": "equal_frequency",
                "bins": 5,
                "use_case": "Balanced categories"
              },
              {
                "method": "quantile_based",
                "quantiles": [
                  0,
                  0.25,
                  0.5,
                  0.75,
                  1.0
                ],
                "use_case": "Statistical quartiles"
              },
              {
                "method": "custom_business",
                "example": "age groups, income brackets",
                "use_case": "Domain-specific categories"
              }
            ]
          },
          {
            "column_name": "income",
            "binning_strategies": [
              {
                "method": "equal_width",
                "bins": 5,
                "use_case": "Simple categorization"
              },
              {
                "method": "equal_frequency",
                "bins": 5,
                "use_case": "Balanced categories"
              },
              {
                "method": "quantile_based",
                "quantiles": [
                  0,
                  0.25,
                  0.5,
                  0.75,
                  1.0
                ],
                "use_case": "Statistical quartiles"
              },
              {
                "method": "custom_business",
                "example": "age groups, income brackets",
                "use_case": "Domain-specific categories"
              }
            ]
          },
          {
            "column_name": "spending_score",
            "binning_strategies": [
              {
                "method": "equal_width",
                "bins": 5,
                "use_case": "Simple categorization"
              },
              {
                "method": "equal_frequency",
                "bins": 5,
                "use_case": "Balanced categories"
              },
              {
                "method": "quantile_based",
                "quantiles": [
                  0,
                  0.25,
                  0.5,
                  0.75,
                  1.0
                ],
                "use_case": "Statistical quartiles"
              },
              {
                "method": "custom_business",
                "example": "age groups, income brackets",
                "use_case": "Domain-specific categories"
              }
            ]
          },
          {
            "column_name": "purchase_amount",
            "binning_strategies": [
              {
                "method": "equal_width",
                "bins": 5,
                "use_case": "Simple categorization"
              },
              {
                "method": "equal_frequency",
                "bins": 5,
                "use_case": "Balanced categories"
              },
              {
                "method": "quantile_based",
                "quantiles": [
                  0,
                  0.25,
                  0.5,
                  0.75,
                  1.0
                ],
                "use_case": "Statistical quartiles"
              },
              {
                "method": "custom_business",
                "example": "age groups, income brackets",
                "use_case": "Domain-specific categories"
              }
            ]
          },
          {
            "column_name": "last_visit_days",
            "binning_strategies": [
              {
                "method": "equal_width",
                "bins": 5,
                "use_case": "Simple categorization"
              },
              {
                "method": "equal_frequency",
                "bins": 5,
                "use_case": "Balanced categories"
              },
              {
                "method": "quantile_based",
                "quantiles": [
                  0,
                  0.25,
                  0.5,
                  0.75,
                  1.0
                ],
                "use_case": "Statistical quartiles"
              },
              {
                "method": "custom_business",
                "example": "age groups, income brackets",
                "use_case": "Domain-specific categories"
              }
            ]
          },
          {
            "column_name": "total_visits",
            "binning_strategies": [
              {
                "method": "equal_width",
                "bins": 5,
                "use_case": "Simple categorization"
              },
              {
                "method": "equal_frequency",
                "bins": 5,
                "use_case": "Balanced categories"
              },
              {
                "method": "quantile_based",
                "quantiles": [
                  0,
                  0.25,
                  0.5,
                  0.75,
                  1.0
                ],
                "use_case": "Statistical quartiles"
              },
              {
                "method": "custom_business",
                "example": "age groups, income brackets",
                "use_case": "Domain-specific categories"
              }
            ]
          }
        ]
      },
      "transformation_recommendations": {
        "normalization_transformations": [],
        "distribution_transformations": [],
        "outlier_transformations": [],
        "missing_value_transformations": []
      },
      "dimensionality_analysis": {
        "current_dimensions": 10,
        "data_points": 30,
        "dimensionality_ratio": 0.3333333333333333,
        "recommendations": [
          {
            "issue": "High dimensionality relative to data points",
            "recommendation": "Consider dimensionality reduction techniques",
            "priority": "high"
          },
          {
            "technique": "PCA",
            "recommendation": "Use PCA with 2 components to retain 80% variance",
            "dimensionality_reduction": "7 -> 2",
            "priority": "medium"
          }
        ],
        "curse_of_dimensionality_risk": "high",
        "pca_analysis": {
          "total_components": 7,
          "components_for_80_variance": 2,
          "components_for_90_variance": 2,
          "components_for_95_variance": 3,
          "explained_variance_ratio": [
            0.7678,
            0.1472,
            0.0426,
            0.0226,
            0.0126,
            0.0046,
            0.0026
          ],
          "cumulative_variance_ratio": [
            0.7678,
            0.915,
            0.9575,
            0.9801,
            0.9928,
            0.9974,
            1.0
          ]
        },
        "feature_selection_methods": [
          {
            "method": "Correlation-based selection",
            "description": "Remove highly correlated features",
            "use_case": "When multicollinearity is a concern",
            "sklearn_class": "Manual correlation analysis"
          },
          {
            "method": "Univariate selection",
            "description": "Select features based on statistical tests",
            "use_case": "Quick feature selection with target variable",
            "sklearn_class": "SelectKBest, SelectPercentile"
          },
          {
            "method": "Recursive Feature Elimination",
            "description": "Iteratively remove features and build model on remaining",
            "use_case": "Model-based feature importance",
            "sklearn_class": "RFE, RFECV"
          },
          {
            "method": "Tree-based selection",
            "description": "Use feature importance from tree-based models",
            "use_case": "Non-linear feature importance",
            "sklearn_class": "SelectFromModel with RandomForest"
          }
        ]
      },
      "feature_engineering_metadata": {
        "timestamp": "2025-08-09T02:33:24.563722",
        "sklearn_available": true,
        "original_shape": [
          30,
          10
        ],
        "current_shape": [
          30,
          10
        ],
        "transformations_applied": 0
      },
      "supervised_feature_analysis": {
        "target_column": "purchase_amount",
        "target_type": "regression",
        "feature_importance": [
          {
            "feature": "customer_id",
            "score": 0.0384,
            "method": "random_forest"
          },
          {
            "feature": "age",
            "score": 0.0965,
            "method": "random_forest"
          },
          {
            "feature": "income",
            "score": 0.0924,
            "method": "random_forest"
          },
          {
            "feature": "spending_score",
            "score": 0.2025,
            "method": "random_forest"
          },
          {
            "feature": "last_visit_days",
            "score": 0.2432,
            "method": "random_forest"
          },
          {
            "feature": "total_visits",
            "score": 0.2875,
            "method": "random_forest"
          },
          {
            "feature": "gender_Female",
            "score": 0.0042,
            "method": "random_forest"
          },
          {
            "feature": "gender_Male",
            "score": 0.0035,
            "method": "random_forest"
          },
          {
            "feature": "gender_nan",
            "score": 0.0,
            "method": "random_forest"
          },
          {
            "feature": "membership_tier_Bronze",
            "score": 0.0021,
            "method": "random_forest"
          },
          {
            "feature": "membership_tier_Gold",
            "score": 0.0016,
            "method": "random_forest"
          },
          {
            "feature": "membership_tier_Platinum",
            "score": 0.0008,
            "method": "random_forest"
          },
          {
            "feature": "membership_tier_Silver",
            "score": 0.0068,
            "method": "random_forest"
          },
          {
            "feature": "membership_tier_nan",
            "score": 0.0,
            "method": "random_forest"
          },
          {
            "feature": "preferred_category_Beauty",
            "score": 0.0026,
            "method": "random_forest"
          },
          {
            "feature": "preferred_category_Books",
            "score": 0.0024,
            "method": "random_forest"
          },
          {
            "feature": "preferred_category_Clothing",
            "score": 0.0052,
            "method": "random_forest"
          },
          {
            "feature": "preferred_category_Electronics",
            "score": 0.0059,
            "method": "random_forest"
          },
          {
            "feature": "preferred_category_Home",
            "score": 0.0028,
            "method": "random_forest"
          },
          {
            "feature": "preferred_category_Sports",
            "score": 0.0016,
            "method": "random_forest"
          },
          {
            "feature": "preferred_category_nan",
            "score": 0.0,
            "method": "random_forest"
          }
        ],
        "feature_selection_recommendations": [
          {
            "method": "SelectKBest with f_regression",
            "use_case": "Numeric features with numeric target",
            "parameters": "k=10 or k='all'"
          },
          {
            "method": "RFE with RandomForestRegressor",
            "use_case": "Comprehensive feature selection",
            "parameters": "n_features_to_select=10"
          },
          {
            "method": "Lasso regularization",
            "use_case": "Automatic feature selection through regularization",
            "parameters": "alpha=0.01"
          }
        ],
        "feature_importance_by_method": {
          "random_forest": [
            {
              "feature": "total_visits",
              "score": 0.2875,
              "method": "random_forest"
            },
            {
              "feature": "last_visit_days",
              "score": 0.2432,
              "method": "random_forest"
            },
            {
              "feature": "spending_score",
              "score": 0.2025,
              "method": "random_forest"
            },
            {
              "feature": "age",
              "score": 0.0965,
              "method": "random_forest"
            },
            {
              "feature": "income",
              "score": 0.0924,
              "method": "random_forest"
            },
            {
              "feature": "customer_id",
              "score": 0.0384,
              "method": "random_forest"
            },
            {
              "feature": "membership_tier_Silver",
              "score": 0.0068,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_Electronics",
              "score": 0.0059,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_Clothing",
              "score": 0.0052,
              "method": "random_forest"
            },
            {
              "feature": "gender_Female",
              "score": 0.0042,
              "method": "random_forest"
            },
            {
              "feature": "gender_Male",
              "score": 0.0035,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_Home",
              "score": 0.0028,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_Beauty",
              "score": 0.0026,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_Books",
              "score": 0.0024,
              "method": "random_forest"
            },
            {
              "feature": "membership_tier_Bronze",
              "score": 0.0021,
              "method": "random_forest"
            },
            {
              "feature": "membership_tier_Gold",
              "score": 0.0016,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_Sports",
              "score": 0.0016,
              "method": "random_forest"
            },
            {
              "feature": "membership_tier_Platinum",
              "score": 0.0008,
              "method": "random_forest"
            },
            {
              "feature": "gender_nan",
              "score": 0.0,
              "method": "random_forest"
            },
            {
              "feature": "membership_tier_nan",
              "score": 0.0,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_nan",
              "score": 0.0,
              "method": "random_forest"
            }
          ]
        }
      }
    },
    "insights_and_recommendations": {
      "key_findings": [
        "Analysis completed with 3 insights generated",
        "Data contains 30 rows and 10 columns",
        "Overall data quality score: 1.00"
      ],
      "data_quality_insights": [
        {
          "type": "positive",
          "message": "Excellent data quality (score: 1.00). Data is ready for analysis.",
          "priority": "info"
        }
      ],
      "statistical_insights": [
        {
          "type": "finding",
          "message": "Strong correlation detected between ['income', 'spending_score'] (r=-0.973)",
          "priority": "medium"
        }
      ],
      "feature_insights": [
        {
          "type": "warning",
          "message": "High risk of curse of dimensionality. Consider dimensionality reduction techniques.",
          "priority": "high"
        }
      ],
      "modeling_recommendations": [
        {
          "type": "recommendation",
          "message": "Regression problem. Start with Linear Regression and Random Forest Regressor.",
          "priority": "info"
        }
      ],
      "next_steps": [],
      "ai_insights": {
        "error": "AI insights generation failed",
        "details": "asyncio.run() cannot be called from a running event loop"
      }
    },
    "analysis_metadata": {
      "timestamp": "2025-08-09T02:33:24.380293",
      "target_column": "purchase_amount",
      "ai_insights_enabled": true,
      "execution_time_seconds": 0.22,
      "data_shape": [
        30,
        10
      ]
    }
  },
  "modeling_results": {
    "experiment_id": "exp_20250809_023400",
    "target_column": "purchase_amount",
    "problem_analysis": {
      "problem_analysis": {
        "problem_type": "regression",
        "target_column": "purchase_amount",
        "target_statistics": {
          "mean": 143.45666666666665,
          "std": 47.73222856391854,
          "min": 67.9,
          "max": 245.8,
          "skewness": 0.09737676656941326,
          "kurtosis": -0.993963000501334,
          "range": 177.9
        },
        "complexity": "standard_regression",
        "feature_analysis": {
          "total_features": 9,
          "numeric_features": 6,
          "categorical_features": 3,
          "feature_to_sample_ratio": 0.3,
          "high_dimensionality": true
        },
        "data_quality_for_ml": {
          "missing_values": "0",
          "missing_percentage": 0.0,
          "duplicated_rows": "0",
          "target_missing": "0"
        }
      },
      "data_preparation": {
        "missing_value_handling": [],
        "encoding_needs": [
          {
            "column": "gender",
            "unique_values": 2,
            "recommended_encoding": "Label encoding"
          },
          {
            "column": "membership_tier",
            "unique_values": 4,
            "recommended_encoding": "One-hot encoding"
          },
          {
            "column": "preferred_category",
            "unique_values": 6,
            "recommended_encoding": "One-hot encoding"
          }
        ],
        "scaling_needs": [
          {
            "issue": "Features have very different scales",
            "max_range": 63000.0,
            "min_range": 13.0,
            "recommended_scaling": "StandardScaler or MinMaxScaler"
          }
        ],
        "outlier_handling": [],
        "feature_selection_needs": []
      },
      "algorithm_recommendations": {
        "recommended_algorithms": [
          {
            "name": "Linear Regression",
            "sklearn_class": "LinearRegression",
            "pros": [
              "Simple",
              "Interpretable",
              "Fast",
              "Good baseline"
            ],
            "cons": [
              "Assumes linear relationship",
              "Sensitive to outliers"
            ],
            "best_for": "Linear relationships, baseline model",
            "priority": "high"
          },
          {
            "name": "Ridge Regression",
            "sklearn_class": "Ridge",
            "pros": [
              "Handles multicollinearity",
              "Prevents overfitting"
            ],
            "cons": [
              "Still assumes linearity"
            ],
            "best_for": "Many correlated features, regularization needed",
            "priority": "high"
          },
          {
            "name": "Random Forest Regressor",
            "sklearn_class": "RandomForestRegressor",
            "pros": [
              "Handles non-linearity",
              "Feature importance",
              "Robust"
            ],
            "cons": [
              "Less interpretable",
              "Can overfit"
            ],
            "best_for": "Non-linear relationships, robust predictions",
            "priority": "high"
          },
          {
            "name": "Support Vector Regression",
            "sklearn_class": "SVR",
            "pros": [
              "Effective in high dimensions",
              "Robust to outliers"
            ],
            "cons": [
              "Slow on large datasets",
              "Hyperparameter sensitive"
            ],
            "best_for": "High-dimensional data, non-linear relationships",
            "priority": "medium"
          }
        ],
        "algorithm_rationale": {},
        "ensemble_recommendations": [],
        "advanced_algorithms": []
      },
      "preprocessing_recommendations": {
        "steps": [
          {
            "step": 2,
            "name": "Encode Categorical Variables",
            "sklearn_transformers": [
              "OneHotEncoder",
              "LabelEncoder",
              "OrdinalEncoder"
            ],
            "custom_options": [
              "Target encoding",
              "Frequency encoding"
            ],
            "priority": "high"
          },
          {
            "step": 3,
            "name": "Scale Numeric Features",
            "sklearn_transformers": [
              "StandardScaler",
              "MinMaxScaler",
              "RobustScaler"
            ],
            "when_needed": "For algorithms sensitive to scale (SVM, KNN, Neural Networks)",
            "priority": "medium"
          },
          {
            "step": 5,
            "name": "Handle Outliers (Optional)",
            "sklearn_transformers": [
              "None built-in"
            ],
            "custom_options": [
              "Winsorization",
              "IQR capping",
              "Isolation Forest"
            ],
            "priority": "low"
          }
        ],
        "order": "Recommended execution order",
        "alternatives": {
          "minimal_pipeline": [
            "Handle missing values",
            "Encode categoricals"
          ],
          "standard_pipeline": [
            "Handle missing values",
            "Encode categoricals",
            "Scale features"
          ],
          "comprehensive_pipeline": [
            "Handle missing values",
            "Encode categoricals",
            "Scale features",
            "Feature selection",
            "Handle outliers"
          ]
        },
        "sklearn_pipeline_example": {
          "code": "\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.preprocessing import StandardScaler, OneHotEncoder\nfrom sklearn.impute import SimpleImputer\n\n# Define transformers\nnumeric_features = [...] # list of numeric columns\ncategorical_features = [...] # list of categorical columns\n\nnumeric_transformer = Pipeline([\n    ('imputer', SimpleImputer(strategy='median')),\n    ('scaler', StandardScaler())\n])\n\ncategorical_transformer = Pipeline([\n    ('imputer', SimpleImputer(strategy='constant', fill_value='missing')),\n    ('onehot', OneHotEncoder(handle_unknown='ignore'))\n])\n\n# Combine transformers\npreprocessor = ColumnTransformer([\n    ('num', numeric_transformer, numeric_features),\n    ('cat', categorical_transformer, categorical_features)\n])\n",
          "description": "Complete preprocessing pipeline using sklearn"
        }
      },
      "evaluation_strategy": {
        "cross_validation": {
          "recommended_method": "Leave-One-Out or 5-fold CV",
          "recommended_folds": 5,
          "sklearn_implementation": "cross_val_score(model, X, y, cv=5)",
          "alternatives": [
            "StratifiedKFold",
            "TimeSeriesSplit",
            "Hold-out validation"
          ]
        },
        "metrics": {
          "primary_metrics": [
            {
              "metric": "R² Score",
              "use_case": "Proportion of variance explained",
              "sklearn_function": "r2_score"
            },
            {
              "metric": "Mean Absolute Error (MAE)",
              "use_case": "Average absolute error",
              "sklearn_function": "mean_absolute_error"
            },
            {
              "metric": "Root Mean Squared Error (RMSE)",
              "use_case": "Penalize large errors",
              "sklearn_function": "sqrt(mean_squared_error)"
            }
          ],
          "secondary_metrics": [
            {
              "metric": "Mean Squared Error (MSE)",
              "use_case": "Squared error penalty",
              "sklearn_function": "mean_squared_error"
            },
            {
              "metric": "Mean Absolute Percentage Error (MAPE)",
              "use_case": "Percentage-based error",
              "sklearn_function": "mean_absolute_percentage_error"
            }
          ]
        },
        "validation_approach": {
          "recommended": "Cross-validation",
          "advantages": [
            "Better use of limited data",
            "More robust estimates"
          ],
          "sklearn_implementation": "cross_val_score(model, X, y, cv=5, scoring='accuracy')"
        },
        "interpretation_methods": [
          {
            "method": "Feature Importance",
            "applicable_to": "Tree-based models",
            "sklearn_access": "model.feature_importances_"
          },
          {
            "method": "Coefficients",
            "applicable_to": "Linear models",
            "sklearn_access": "model.coef_"
          },
          {
            "method": "Permutation Importance",
            "applicable_to": "Any model",
            "sklearn_function": "permutation_importance"
          },
          {
            "method": "Partial Dependence Plots",
            "applicable_to": "Any model",
            "sklearn_function": "plot_partial_dependence"
          }
        ]
      },
      "ml_metadata": {
        "timestamp": "2025-08-09T02:34:00.240234",
        "sklearn_available": true,
        "xgboost_available": false,
        "lightgbm_available": false,
        "target_column": "purchase_amount",
        "problem_type": "regression",
        "data_shape": [
          30,
          10
        ]
      }
    },
    "data_preparation": {
      "data_quality_summary": {
        "overall_quality_score": 1.0,
        "quality_grade": "Excellent",
        "component_scores": {
          "completeness": 1.0,
          "uniqueness": 1.0,
          "validity": 1.0,
          "consistency": 1.0
        },
        "score_weights": {
          "completeness": 0.3,
          "uniqueness": 0.2,
          "validity": 0.3,
          "consistency": 0.2
        },
        "assessment_summary": "Data quality is excellent with minimal issues"
      },
      "preprocessing_requirements": {
        "missing_value_handling": [],
        "encoding_needs": [
          {
            "column": "gender",
            "unique_values": 2,
            "recommended_encoding": "Label encoding"
          },
          {
            "column": "membership_tier",
            "unique_values": 4,
            "recommended_encoding": "One-hot encoding"
          },
          {
            "column": "preferred_category",
            "unique_values": 6,
            "recommended_encoding": "One-hot encoding"
          }
        ],
        "scaling_needs": [
          {
            "issue": "Features have very different scales",
            "max_range": 63000.0,
            "min_range": 13.0,
            "recommended_scaling": "StandardScaler or MinMaxScaler"
          }
        ],
        "outlier_handling": [],
        "feature_selection_needs": []
      },
      "feature_readiness": {
        "total_features": 9,
        "numeric_features": 6,
        "categorical_features": 3,
        "features_with_missing": [],
        "high_cardinality_features": []
      },
      "target_analysis": {
        "target_type": "regression",
        "missing_values": 0,
        "missing_percentage": 0.0,
        "unique_values": 30,
        "distribution_summary": {
          "mean": 143.45666666666665,
          "std": 47.73222856391854,
          "min": 67.9,
          "max": 245.8,
          "skewness": 0.09737676656941326
        }
      }
    },
    "feature_engineering": {
      "feature_analysis": {
        "feature_analysis": {
          "feature_types": {
            "numeric_features": [
              "customer_id",
              "age",
              "income",
              "spending_score",
              "purchase_amount",
              "last_visit_days",
              "total_visits"
            ],
            "categorical_features": [
              "gender",
              "membership_tier",
              "preferred_category"
            ],
            "datetime_features": [
              "customer_id",
              "age",
              "income",
              "spending_score",
              "purchase_amount",
              "last_visit_days",
              "total_visits"
            ],
            "total_features": 10
          },
          "feature_quality": [
            {
              "completeness": 1.0,
              "uniqueness": 1.0,
              "data_type": "int64",
              "variance": 77.5,
              "skewness": 0.0,
              "feature_name": "customer_id"
            },
            {
              "completeness": 1.0,
              "uniqueness": 0.7666666666666667,
              "data_type": "int64",
              "variance": 40.3448275862069,
              "skewness": 0.3330392421362846,
              "feature_name": "age"
            },
            {
              "completeness": 1.0,
              "uniqueness": 1.0,
              "data_type": "int64",
              "variance": 281544827.5862069,
              "skewness": 0.1117955224386666,
              "feature_name": "income"
            },
            {
              "completeness": 1.0,
              "uniqueness": 1.0,
              "data_type": "int64",
              "variance": 221.5919540229885,
              "skewness": -0.1954049876532426,
              "feature_name": "spending_score"
            },
            {
              "completeness": 1.0,
              "uniqueness": 1.0,
              "data_type": "float64",
              "variance": 2278.3656436781607,
              "skewness": 0.09737676656941326,
              "feature_name": "purchase_amount"
            },
            {
              "completeness": 1.0,
              "uniqueness": 0.06666666666666667,
              "data_type": "object",
              "feature_name": "gender"
            },
            {
              "completeness": 1.0,
              "uniqueness": 0.13333333333333333,
              "data_type": "object",
              "feature_name": "membership_tier"
            },
            {
              "completeness": 1.0,
              "uniqueness": 0.43333333333333335,
              "data_type": "int64",
              "variance": 12.231034482758622,
              "skewness": 1.0377016961565935,
              "feature_name": "last_visit_days"
            },
            {
              "completeness": 1.0,
              "uniqueness": 0.9,
              "data_type": "int64",
              "variance": 3376.1022988505756,
              "skewness": 0.9198295548822573,
              "feature_name": "total_visits"
            },
            {
              "completeness": 1.0,
              "uniqueness": 0.2,
              "data_type": "object",
              "feature_name": "preferred_category"
            }
          ],
          "high_correlations": [
            {
              "feature1": "age",
              "feature2": "income",
              "correlation": 0.969,
              "strength": "very_high"
            },
            {
              "feature1": "age",
              "feature2": "spending_score",
              "correlation": -0.962,
              "strength": "very_high"
            },
            {
              "feature1": "age",
              "feature2": "last_visit_days",
              "correlation": 0.84,
              "strength": "high"
            },
            {
              "feature1": "age",
              "feature2": "total_visits",
              "correlation": 0.871,
              "strength": "high"
            },
            {
              "feature1": "income",
              "feature2": "spending_score",
              "correlation": -0.973,
              "strength": "very_high"
            },
            {
              "feature1": "income",
              "feature2": "last_visit_days",
              "correlation": 0.854,
              "strength": "high"
            },
            {
              "feature1": "income",
              "feature2": "total_visits",
              "correlation": 0.892,
              "strength": "high"
            },
            {
              "feature1": "spending_score",
              "feature2": "purchase_amount",
              "correlation": 0.835,
              "strength": "high"
            },
            {
              "feature1": "spending_score",
              "feature2": "last_visit_days",
              "correlation": -0.867,
              "strength": "high"
            },
            {
              "feature1": "spending_score",
              "feature2": "total_visits",
              "correlation": -0.916,
              "strength": "very_high"
            },
            {
              "feature1": "purchase_amount",
              "feature2": "last_visit_days",
              "correlation": -0.832,
              "strength": "high"
            },
            {
              "feature1": "purchase_amount",
              "feature2": "total_visits",
              "correlation": -0.816,
              "strength": "high"
            },
            {
              "feature1": "last_visit_days",
              "feature2": "total_visits",
              "correlation": 0.907,
              "strength": "very_high"
            }
          ]
        },
        "encoding_recommendations": {
          "categorical_encoding": [
            {
              "column_name": "gender",
              "unique_values": 2,
              "total_values": 30,
              "cardinality": "low",
              "recommended_encodings": [
                {
                  "method": "Label Encoding",
                  "reason": "Binary categorical variable",
                  "priority": "high"
                }
              ]
            },
            {
              "column_name": "membership_tier",
              "unique_values": 4,
              "total_values": 30,
              "cardinality": "high",
              "recommended_encodings": [
                {
                  "method": "One-Hot Encoding",
                  "reason": "Low cardinality categorical variable",
                  "priority": "high"
                },
                {
                  "method": "Label Encoding",
                  "reason": "Alternative for ordinal relationships",
                  "priority": "medium"
                }
              ]
            },
            {
              "column_name": "preferred_category",
              "unique_values": 6,
              "total_values": 30,
              "cardinality": "high",
              "recommended_encodings": [
                {
                  "method": "One-Hot Encoding",
                  "reason": "Low cardinality categorical variable",
                  "priority": "high"
                },
                {
                  "method": "Label Encoding",
                  "reason": "Alternative for ordinal relationships",
                  "priority": "medium"
                }
              ]
            }
          ],
          "datetime_encoding": [],
          "text_encoding": []
        },
        "scaling_recommendations": {
          "scaling_recommendations": [
            {
              "column_name": "customer_id",
              "statistics": {
                "mean": 15.5,
                "std": 8.803,
                "min": 1.0,
                "max": 30.0,
                "range": 29.0,
                "skewness": 0.0
              },
              "recommended_scalers": [
                {
                  "method": "StandardScaler",
                  "reason": "Good for normally distributed data",
                  "priority": "high",
                  "use_case": "Most machine learning algorithms"
                },
                {
                  "method": "MinMaxScaler",
                  "reason": "Preserves original distribution shape, good for bounded data",
                  "priority": "high",
                  "use_case": "Neural networks, algorithms sensitive to feature scale"
                }
              ]
            },
            {
              "column_name": "age",
              "statistics": {
                "mean": 33.0,
                "std": 6.352,
                "min": 23.0,
                "max": 45.0,
                "range": 22.0,
                "skewness": 0.333
              },
              "recommended_scalers": [
                {
                  "method": "StandardScaler",
                  "reason": "Good for normally distributed data",
                  "priority": "high",
                  "use_case": "Most machine learning algorithms"
                },
                {
                  "method": "MinMaxScaler",
                  "reason": "Preserves original distribution shape, good for bounded data",
                  "priority": "high",
                  "use_case": "Neural networks, algorithms sensitive to feature scale"
                }
              ]
            },
            {
              "column_name": "income",
              "statistics": {
                "mean": 47200.0,
                "std": 16779.298,
                "min": 15000.0,
                "max": 78000.0,
                "range": 63000.0,
                "skewness": 0.112
              },
              "recommended_scalers": [
                {
                  "method": "StandardScaler",
                  "reason": "Good for normally distributed data",
                  "priority": "high",
                  "use_case": "Most machine learning algorithms"
                },
                {
                  "method": "MinMaxScaler",
                  "reason": "Preserves original distribution shape, good for bounded data",
                  "priority": "high",
                  "use_case": "Neural networks, algorithms sensitive to feature scale"
                }
              ]
            },
            {
              "column_name": "spending_score",
              "statistics": {
                "mean": 64.167,
                "std": 14.886,
                "min": 38.0,
                "max": 88.0,
                "range": 50.0,
                "skewness": -0.195
              },
              "recommended_scalers": [
                {
                  "method": "StandardScaler",
                  "reason": "Good for normally distributed data",
                  "priority": "high",
                  "use_case": "Most machine learning algorithms"
                },
                {
                  "method": "MinMaxScaler",
                  "reason": "Preserves original distribution shape, good for bounded data",
                  "priority": "high",
                  "use_case": "Neural networks, algorithms sensitive to feature scale"
                }
              ]
            },
            {
              "column_name": "purchase_amount",
              "statistics": {
                "mean": 143.457,
                "std": 47.732,
                "min": 67.9,
                "max": 245.8,
                "range": 177.9,
                "skewness": 0.097
              },
              "recommended_scalers": [
                {
                  "method": "StandardScaler",
                  "reason": "Good for normally distributed data",
                  "priority": "high",
                  "use_case": "Most machine learning algorithms"
                },
                {
                  "method": "MinMaxScaler",
                  "reason": "Preserves original distribution shape, good for bounded data",
                  "priority": "high",
                  "use_case": "Neural networks, algorithms sensitive to feature scale"
                }
              ]
            },
            {
              "column_name": "last_visit_days",
              "statistics": {
                "mean": 4.9,
                "std": 3.497,
                "min": 1.0,
                "max": 14.0,
                "range": 13.0,
                "skewness": 1.038
              },
              "recommended_scalers": [
                {
                  "method": "StandardScaler",
                  "reason": "Good for normally distributed data",
                  "priority": "medium",
                  "use_case": "Most machine learning algorithms"
                },
                {
                  "method": "MinMaxScaler",
                  "reason": "Preserves original distribution shape, good for bounded data",
                  "priority": "high",
                  "use_case": "Neural networks, algorithms sensitive to feature scale"
                }
              ]
            },
            {
              "column_name": "total_visits",
              "statistics": {
                "mean": 88.633,
                "std": 58.104,
                "min": 12.0,
                "max": 234.0,
                "range": 222.0,
                "skewness": 0.92
              },
              "recommended_scalers": [
                {
                  "method": "StandardScaler",
                  "reason": "Good for normally distributed data",
                  "priority": "high",
                  "use_case": "Most machine learning algorithms"
                },
                {
                  "method": "MinMaxScaler",
                  "reason": "Preserves original distribution shape, good for bounded data",
                  "priority": "high",
                  "use_case": "Neural networks, algorithms sensitive to feature scale"
                }
              ]
            }
          ]
        },
        "feature_creation_opportunities": {
          "mathematical_combinations": [
            {
              "feature1": "customer_id",
              "feature2": "age",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "customer_id / age",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "customer_id + age",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "customer_id - age",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "customer_id * age",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "customer_id",
              "feature2": "income",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "customer_id / income",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "customer_id + income",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "customer_id - income",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "customer_id * income",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "customer_id",
              "feature2": "spending_score",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "customer_id / spending_score",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "customer_id + spending_score",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "customer_id - spending_score",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "customer_id * spending_score",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "customer_id",
              "feature2": "purchase_amount",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "customer_id / purchase_amount",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "customer_id + purchase_amount",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "customer_id - purchase_amount",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "customer_id * purchase_amount",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "customer_id",
              "feature2": "last_visit_days",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "customer_id / last_visit_days",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "customer_id + last_visit_days",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "customer_id - last_visit_days",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "customer_id * last_visit_days",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "customer_id",
              "feature2": "total_visits",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "customer_id / total_visits",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "customer_id + total_visits",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "customer_id - total_visits",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "customer_id * total_visits",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "age",
              "feature2": "income",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "age / income",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "age + income",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "age - income",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "age * income",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "age",
              "feature2": "spending_score",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "age / spending_score",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "age + spending_score",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "age - spending_score",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "age * spending_score",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "age",
              "feature2": "purchase_amount",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "age / purchase_amount",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "age + purchase_amount",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "age - purchase_amount",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "age * purchase_amount",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "age",
              "feature2": "last_visit_days",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "age / last_visit_days",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "age + last_visit_days",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "age - last_visit_days",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "age * last_visit_days",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "age",
              "feature2": "total_visits",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "age / total_visits",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "age + total_visits",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "age - total_visits",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "age * total_visits",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "income",
              "feature2": "spending_score",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "income / spending_score",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "income + spending_score",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "income - spending_score",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "income * spending_score",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "income",
              "feature2": "purchase_amount",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "income / purchase_amount",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "income + purchase_amount",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "income - purchase_amount",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "income * purchase_amount",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "income",
              "feature2": "last_visit_days",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "income / last_visit_days",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "income + last_visit_days",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "income - last_visit_days",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "income * last_visit_days",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "income",
              "feature2": "total_visits",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "income / total_visits",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "income + total_visits",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "income - total_visits",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "income * total_visits",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "spending_score",
              "feature2": "purchase_amount",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "spending_score / purchase_amount",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "spending_score + purchase_amount",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "spending_score - purchase_amount",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "spending_score * purchase_amount",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "spending_score",
              "feature2": "last_visit_days",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "spending_score / last_visit_days",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "spending_score + last_visit_days",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "spending_score - last_visit_days",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "spending_score * last_visit_days",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "spending_score",
              "feature2": "total_visits",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "spending_score / total_visits",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "spending_score + total_visits",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "spending_score - total_visits",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "spending_score * total_visits",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "purchase_amount",
              "feature2": "last_visit_days",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "purchase_amount / last_visit_days",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "purchase_amount + last_visit_days",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "purchase_amount - last_visit_days",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "purchase_amount * last_visit_days",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "purchase_amount",
              "feature2": "total_visits",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "purchase_amount / total_visits",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "purchase_amount + total_visits",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "purchase_amount - total_visits",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "purchase_amount * total_visits",
                  "use_case": "Interaction effect"
                }
              ]
            },
            {
              "feature1": "last_visit_days",
              "feature2": "total_visits",
              "suggested_operations": [
                {
                  "operation": "ratio",
                  "formula": "last_visit_days / total_visits",
                  "use_case": "Relative comparison"
                },
                {
                  "operation": "sum",
                  "formula": "last_visit_days + total_visits",
                  "use_case": "Total or combined effect"
                },
                {
                  "operation": "difference",
                  "formula": "last_visit_days - total_visits",
                  "use_case": "Change or gap analysis"
                },
                {
                  "operation": "product",
                  "formula": "last_visit_days * total_visits",
                  "use_case": "Interaction effect"
                }
              ]
            }
          ],
          "datetime_features": [],
          "text_features": [],
          "interaction_features": [
            {
              "feature1": "gender",
              "feature2": "membership_tier",
              "interaction_type": "categorical_combination",
              "formula": "gender + '_' + membership_tier",
              "use_case": "Capture combined effect of categories"
            },
            {
              "feature1": "gender",
              "feature2": "preferred_category",
              "interaction_type": "categorical_combination",
              "formula": "gender + '_' + preferred_category",
              "use_case": "Capture combined effect of categories"
            },
            {
              "feature1": "membership_tier",
              "feature2": "preferred_category",
              "interaction_type": "categorical_combination",
              "formula": "membership_tier + '_' + preferred_category",
              "use_case": "Capture combined effect of categories"
            }
          ],
          "binning_opportunities": [
            {
              "column_name": "customer_id",
              "binning_strategies": [
                {
                  "method": "equal_width",
                  "bins": 5,
                  "use_case": "Simple categorization"
                },
                {
                  "method": "equal_frequency",
                  "bins": 5,
                  "use_case": "Balanced categories"
                },
                {
                  "method": "quantile_based",
                  "quantiles": [
                    0,
                    0.25,
                    0.5,
                    0.75,
                    1.0
                  ],
                  "use_case": "Statistical quartiles"
                },
                {
                  "method": "custom_business",
                  "example": "age groups, income brackets",
                  "use_case": "Domain-specific categories"
                }
              ]
            },
            {
              "column_name": "age",
              "binning_strategies": [
                {
                  "method": "equal_width",
                  "bins": 5,
                  "use_case": "Simple categorization"
                },
                {
                  "method": "equal_frequency",
                  "bins": 5,
                  "use_case": "Balanced categories"
                },
                {
                  "method": "quantile_based",
                  "quantiles": [
                    0,
                    0.25,
                    0.5,
                    0.75,
                    1.0
                  ],
                  "use_case": "Statistical quartiles"
                },
                {
                  "method": "custom_business",
                  "example": "age groups, income brackets",
                  "use_case": "Domain-specific categories"
                }
              ]
            },
            {
              "column_name": "income",
              "binning_strategies": [
                {
                  "method": "equal_width",
                  "bins": 5,
                  "use_case": "Simple categorization"
                },
                {
                  "method": "equal_frequency",
                  "bins": 5,
                  "use_case": "Balanced categories"
                },
                {
                  "method": "quantile_based",
                  "quantiles": [
                    0,
                    0.25,
                    0.5,
                    0.75,
                    1.0
                  ],
                  "use_case": "Statistical quartiles"
                },
                {
                  "method": "custom_business",
                  "example": "age groups, income brackets",
                  "use_case": "Domain-specific categories"
                }
              ]
            },
            {
              "column_name": "spending_score",
              "binning_strategies": [
                {
                  "method": "equal_width",
                  "bins": 5,
                  "use_case": "Simple categorization"
                },
                {
                  "method": "equal_frequency",
                  "bins": 5,
                  "use_case": "Balanced categories"
                },
                {
                  "method": "quantile_based",
                  "quantiles": [
                    0,
                    0.25,
                    0.5,
                    0.75,
                    1.0
                  ],
                  "use_case": "Statistical quartiles"
                },
                {
                  "method": "custom_business",
                  "example": "age groups, income brackets",
                  "use_case": "Domain-specific categories"
                }
              ]
            },
            {
              "column_name": "purchase_amount",
              "binning_strategies": [
                {
                  "method": "equal_width",
                  "bins": 5,
                  "use_case": "Simple categorization"
                },
                {
                  "method": "equal_frequency",
                  "bins": 5,
                  "use_case": "Balanced categories"
                },
                {
                  "method": "quantile_based",
                  "quantiles": [
                    0,
                    0.25,
                    0.5,
                    0.75,
                    1.0
                  ],
                  "use_case": "Statistical quartiles"
                },
                {
                  "method": "custom_business",
                  "example": "age groups, income brackets",
                  "use_case": "Domain-specific categories"
                }
              ]
            },
            {
              "column_name": "last_visit_days",
              "binning_strategies": [
                {
                  "method": "equal_width",
                  "bins": 5,
                  "use_case": "Simple categorization"
                },
                {
                  "method": "equal_frequency",
                  "bins": 5,
                  "use_case": "Balanced categories"
                },
                {
                  "method": "quantile_based",
                  "quantiles": [
                    0,
                    0.25,
                    0.5,
                    0.75,
                    1.0
                  ],
                  "use_case": "Statistical quartiles"
                },
                {
                  "method": "custom_business",
                  "example": "age groups, income brackets",
                  "use_case": "Domain-specific categories"
                }
              ]
            },
            {
              "column_name": "total_visits",
              "binning_strategies": [
                {
                  "method": "equal_width",
                  "bins": 5,
                  "use_case": "Simple categorization"
                },
                {
                  "method": "equal_frequency",
                  "bins": 5,
                  "use_case": "Balanced categories"
                },
                {
                  "method": "quantile_based",
                  "quantiles": [
                    0,
                    0.25,
                    0.5,
                    0.75,
                    1.0
                  ],
                  "use_case": "Statistical quartiles"
                },
                {
                  "method": "custom_business",
                  "example": "age groups, income brackets",
                  "use_case": "Domain-specific categories"
                }
              ]
            }
          ]
        },
        "transformation_recommendations": {
          "normalization_transformations": [],
          "distribution_transformations": [],
          "outlier_transformations": [],
          "missing_value_transformations": []
        },
        "dimensionality_analysis": {
          "current_dimensions": 10,
          "data_points": 30,
          "dimensionality_ratio": 0.3333333333333333,
          "recommendations": [
            {
              "issue": "High dimensionality relative to data points",
              "recommendation": "Consider dimensionality reduction techniques",
              "priority": "high"
            },
            {
              "technique": "PCA",
              "recommendation": "Use PCA with 2 components to retain 80% variance",
              "dimensionality_reduction": "7 -> 2",
              "priority": "medium"
            }
          ],
          "curse_of_dimensionality_risk": "high",
          "pca_analysis": {
            "total_components": 7,
            "components_for_80_variance": 2,
            "components_for_90_variance": 2,
            "components_for_95_variance": 3,
            "explained_variance_ratio": [
              0.7678,
              0.1472,
              0.0426,
              0.0226,
              0.0126,
              0.0046,
              0.0026
            ],
            "cumulative_variance_ratio": [
              0.7678,
              0.915,
              0.9575,
              0.9801,
              0.9928,
              0.9974,
              1.0
            ]
          },
          "feature_selection_methods": [
            {
              "method": "Correlation-based selection",
              "description": "Remove highly correlated features",
              "use_case": "When multicollinearity is a concern",
              "sklearn_class": "Manual correlation analysis"
            },
            {
              "method": "Univariate selection",
              "description": "Select features based on statistical tests",
              "use_case": "Quick feature selection with target variable",
              "sklearn_class": "SelectKBest, SelectPercentile"
            },
            {
              "method": "Recursive Feature Elimination",
              "description": "Iteratively remove features and build model on remaining",
              "use_case": "Model-based feature importance",
              "sklearn_class": "RFE, RFECV"
            },
            {
              "method": "Tree-based selection",
              "description": "Use feature importance from tree-based models",
              "use_case": "Non-linear feature importance",
              "sklearn_class": "SelectFromModel with RandomForest"
            }
          ]
        },
        "feature_engineering_metadata": {
          "timestamp": "2025-08-09T02:34:00.258336",
          "sklearn_available": true,
          "original_shape": [
            30,
            10
          ],
          "current_shape": [
            30,
            10
          ],
          "transformations_applied": 0
        },
        "supervised_feature_analysis": {
          "target_column": "purchase_amount",
          "target_type": "regression",
          "feature_importance": [
            {
              "feature": "customer_id",
              "score": 0.0384,
              "method": "random_forest"
            },
            {
              "feature": "age",
              "score": 0.0965,
              "method": "random_forest"
            },
            {
              "feature": "income",
              "score": 0.0924,
              "method": "random_forest"
            },
            {
              "feature": "spending_score",
              "score": 0.2025,
              "method": "random_forest"
            },
            {
              "feature": "last_visit_days",
              "score": 0.2432,
              "method": "random_forest"
            },
            {
              "feature": "total_visits",
              "score": 0.2875,
              "method": "random_forest"
            },
            {
              "feature": "gender_Female",
              "score": 0.0042,
              "method": "random_forest"
            },
            {
              "feature": "gender_Male",
              "score": 0.0035,
              "method": "random_forest"
            },
            {
              "feature": "gender_nan",
              "score": 0.0,
              "method": "random_forest"
            },
            {
              "feature": "membership_tier_Bronze",
              "score": 0.0021,
              "method": "random_forest"
            },
            {
              "feature": "membership_tier_Gold",
              "score": 0.0016,
              "method": "random_forest"
            },
            {
              "feature": "membership_tier_Platinum",
              "score": 0.0008,
              "method": "random_forest"
            },
            {
              "feature": "membership_tier_Silver",
              "score": 0.0068,
              "method": "random_forest"
            },
            {
              "feature": "membership_tier_nan",
              "score": 0.0,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_Beauty",
              "score": 0.0026,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_Books",
              "score": 0.0024,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_Clothing",
              "score": 0.0052,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_Electronics",
              "score": 0.0059,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_Home",
              "score": 0.0028,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_Sports",
              "score": 0.0016,
              "method": "random_forest"
            },
            {
              "feature": "preferred_category_nan",
              "score": 0.0,
              "method": "random_forest"
            }
          ],
          "feature_selection_recommendations": [
            {
              "method": "SelectKBest with f_regression",
              "use_case": "Numeric features with numeric target",
              "parameters": "k=10 or k='all'"
            },
            {
              "method": "RFE with RandomForestRegressor",
              "use_case": "Comprehensive feature selection",
              "parameters": "n_features_to_select=10"
            },
            {
              "method": "Lasso regularization",
              "use_case": "Automatic feature selection through regularization",
              "parameters": "alpha=0.01"
            }
          ],
          "feature_importance_by_method": {
            "random_forest": [
              {
                "feature": "total_visits",
                "score": 0.2875,
                "method": "random_forest"
              },
              {
                "feature": "last_visit_days",
                "score": 0.2432,
                "method": "random_forest"
              },
              {
                "feature": "spending_score",
                "score": 0.2025,
                "method": "random_forest"
              },
              {
                "feature": "age",
                "score": 0.0965,
                "method": "random_forest"
              },
              {
                "feature": "income",
                "score": 0.0924,
                "method": "random_forest"
              },
              {
                "feature": "customer_id",
                "score": 0.0384,
                "method": "random_forest"
              },
              {
                "feature": "membership_tier_Silver",
                "score": 0.0068,
                "method": "random_forest"
              },
              {
                "feature": "preferred_category_Electronics",
                "score": 0.0059,
                "method": "random_forest"
              },
              {
                "feature": "preferred_category_Clothing",
                "score": 0.0052,
                "method": "random_forest"
              },
              {
                "feature": "gender_Female",
                "score": 0.0042,
                "method": "random_forest"
              },
              {
                "feature": "gender_Male",
                "score": 0.0035,
                "method": "random_forest"
              },
              {
                "feature": "preferred_category_Home",
                "score": 0.0028,
                "method": "random_forest"
              },
              {
                "feature": "preferred_category_Beauty",
                "score": 0.0026,
                "method": "random_forest"
              },
              {
                "feature": "preferred_category_Books",
                "score": 0.0024,
                "method": "random_forest"
              },
              {
                "feature": "membership_tier_Bronze",
                "score": 0.0021,
                "method": "random_forest"
              },
              {
                "feature": "membership_tier_Gold",
                "score": 0.0016,
                "method": "random_forest"
              },
              {
                "feature": "preferred_category_Sports",
                "score": 0.0016,
                "method": "random_forest"
              },
              {
                "feature": "membership_tier_Platinum",
                "score": 0.0008,
                "method": "random_forest"
              },
              {
                "feature": "gender_nan",
                "score": 0.0,
                "method": "random_forest"
              },
              {
                "feature": "membership_tier_nan",
                "score": 0.0,
                "method": "random_forest"
              },
              {
                "feature": "preferred_category_nan",
                "score": 0.0,
                "method": "random_forest"
              }
            ]
          }
        }
      },
      "transformations_applied": [
        {
          "type": "categorical_encoding",
          "column": "gender",
          "method": "label",
          "success": true
        },
        {
          "type": "categorical_encoding",
          "column": "membership_tier",
          "method": "onehot",
          "success": true
        },
        {
          "type": "categorical_encoding",
          "column": "preferred_category",
          "method": "onehot",
          "success": true
        },
        {
          "type": "numeric_scaling",
          "columns": [
            "customer_id",
            "age",
            "income",
            "spending_score",
            "last_visit_days",
            "total_visits"
          ],
          "method": "standard",
          "success": true
        }
      ],
      "new_features_created": 17,
      "feature_selection_results": {}
    },
    "model_development": {
      "models_trained": [
        {
          "model_id": "linear_regression_20250809_023400",
          "algorithm": "linear_regression",
          "problem_type": "regression",
          "training_time_seconds": 0.001,
          "data_split": {
            "train_size": 24,
            "test_size": 6,
            "test_ratio": 0.2
          },
          "metrics": {
            "r2_score": 0.15912098705844846,
            "mean_squared_error": 598.390352401404,
            "mean_absolute_error": 19.40180579347176,
            "root_mean_squared_error": 24.462018567595848
          },
          "feature_count": 35,
          "hyperparameters": {
            "copy_X": true,
            "fit_intercept": true,
            "n_jobs": null,
            "positive": false,
            "tol": 1e-06
          },
          "coefficients": [
            [
              "membership_tier_Bronze",
              14.562109644169302
            ],
            [
              "membership_tier_Platinum",
              -10.167331897257686
            ],
            [
              "preferred_category_Clothing",
              -9.670458530677132
            ],
            [
              "last_visit_days",
              -8.46378625794385
            ],
            [
              "membership_tier_Gold",
              -8.399285397337865
            ],
            [
              "preferred_category_Home",
              8.1337089219597
            ],
            [
              "gender_encoded",
              7.342824639998597
            ],
            [
              "gender_Male",
              7.342824639998584
            ],
            [
              "gender_Female",
              -7.342824639998566
            ],
            [
              "preferred_category_Electronics",
              -6.664716857586932
            ]
          ]
        },
        {
          "model_id": "random_forest_regressor_20250809_023400",
          "algorithm": "random_forest_regressor",
          "problem_type": "regression",
          "training_time_seconds": 0.034,
          "data_split": {
            "train_size": 24,
            "test_size": 6,
            "test_ratio": 0.2
          },
          "metrics": {
            "r2_score": 0.7048008412672981,
            "mean_squared_error": 210.07103983333425,
            "mean_absolute_error": 12.510833333333352,
            "root_mean_squared_error": 14.493827646047619
          },
          "feature_count": 35,
          "hyperparameters": {
            "bootstrap": true,
            "ccp_alpha": 0.0,
            "criterion": "squared_error",
            "max_depth": null,
            "max_features": 1.0,
            "max_leaf_nodes": null,
            "max_samples": null,
            "min_impurity_decrease": 0.0,
            "min_samples_leaf": 1,
            "min_samples_split": 2,
            "min_weight_fraction_leaf": 0.0,
            "monotonic_cst": null,
            "n_estimators": 100,
            "n_jobs": null,
            "oob_score": false,
            "random_state": 42,
            "verbose": 0,
            "warm_start": false
          },
          "feature_importance": [
            [
              "total_visits_scaled",
              0.17029385398013971
            ],
            [
              "last_visit_days_scaled",
              0.13103237597383058
            ],
            [
              "total_visits",
              0.1194575327382813
            ],
            [
              "spending_score",
              0.11040339774339779
            ],
            [
              "last_visit_days",
              0.10411107384240675
            ],
            [
              "spending_score_scaled",
              0.10087238861958198
            ],
            [
              "income",
              0.05855267385003378
            ],
            [
              "income_scaled",
              0.039635964484584084
            ],
            [
              "age",
              0.03268658232824444
            ],
            [
              "customer_id_scaled",
              0.026270560789244942
            ]
          ]
        },
        {
          "model_id": "ridge_20250809_023400",
          "algorithm": "ridge",
          "problem_type": "regression",
          "training_time_seconds": 0.002,
          "data_split": {
            "train_size": 24,
            "test_size": 6,
            "test_ratio": 0.2
          },
          "metrics": {
            "r2_score": 0.4795818804264823,
            "mean_squared_error": 370.34243592106304,
            "mean_absolute_error": 15.951479632812969,
            "root_mean_squared_error": 19.244283201020064
          },
          "feature_count": 35,
          "hyperparameters": {
            "alpha": 1.0,
            "copy_X": true,
            "fit_intercept": true,
            "max_iter": null,
            "positive": false,
            "random_state": 42,
            "solver": "auto",
            "tol": 0.0001
          },
          "coefficients": [
            [
              "last_visit_days",
              -8.472645145382671
            ],
            [
              "preferred_category_Clothing",
              -8.264270004646509
            ],
            [
              "preferred_category_Home",
              7.589763755568445
            ],
            [
              "membership_tier_Bronze",
              6.9416551538163205
            ],
            [
              "gender_Female",
              -5.108147355368583
            ],
            [
              "gender_encoded",
              5.10814735536858
            ],
            [
              "gender_Male",
              5.10814735536858
            ],
            [
              "membership_tier_Gold",
              -4.9764207236045905
            ],
            [
              "preferred_category_Electronics",
              -4.560386901350006
            ],
            [
              "age",
              -3.8026103990723925
            ]
          ]
        },
        {
          "model_id": "svm_regressor_20250809_023400",
          "algorithm": "svm_regressor",
          "problem_type": "regression",
          "training_time_seconds": 0.001,
          "data_split": {
            "train_size": 24,
            "test_size": 6,
            "test_ratio": 0.2
          },
          "metrics": {
            "r2_score": -1.3031347717338995,
            "mean_squared_error": 1638.9678021153923,
            "mean_absolute_error": 37.29417769302979,
            "root_mean_squared_error": 40.48416730174146
          },
          "feature_count": 35,
          "hyperparameters": {
            "C": 1.0,
            "cache_size": 200,
            "coef0": 0.0,
            "degree": 3,
            "epsilon": 0.1,
            "gamma": "scale",
            "kernel": "rbf",
            "max_iter": -1,
            "shrinking": true,
            "tol": 0.001,
            "verbose": false
          }
        }
      ],
      "training_details": {},
      "algorithm_performance": {},
      "model_comparison": {
        "problem_type": "regression",
        "scoring_metric": "r2",
        "cv_folds": 5,
        "model_comparison": [
          {
            "algorithm": "random_forest_regressor",
            "mean_score": 0.5495729323712538,
            "std_score": 0.41415572814590484,
            "individual_scores": [
              -0.22234234326174418,
              0.48914311282869505,
              0.7392797360518075,
              0.7824635145086036,
              0.9593206417289071
            ],
            "score_range": [
              -0.22234234326174418,
              0.9593206417289071
            ]
          },
          {
            "algorithm": "ridge",
            "mean_score": 0.2380928779526413,
            "std_score": 0.7222864647948604,
            "individual_scores": [
              -1.1898913582405468,
              0.4804780421601599,
              0.6143787283327754,
              0.4986763251265235,
              0.7868226523842947
            ],
            "score_range": [
              -1.1898913582405468,
              0.7868226523842947
            ]
          },
          {
            "algorithm": "svm_regressor",
            "mean_score": 0.03438869042554393,
            "std_score": 0.038136643462697795,
            "individual_scores": [
              -0.010299079558931279,
              -0.006571590565029872,
              0.039302231613578376,
              0.08728796522230786,
              0.06222392541579458
            ],
            "score_range": [
              -0.010299079558931279,
              0.08728796522230786
            ]
          },
          {
            "algorithm": "linear_regression",
            "mean_score": -0.020181068239131905,
            "std_score": 0.8976796583088243,
            "individual_scores": [
              -1.7962534678183522,
              0.3022324770965391,
              0.4256511800016529,
              0.3046560575508821,
              0.6628084119736184
            ],
            "score_range": [
              -1.7962534678183522,
              0.6628084119736184
            ]
          }
        ],
        "best_model": {
          "algorithm": "random_forest_regressor",
          "score": 0.5495729323712538
        },
        "data_shape": [
          30,
          35
        ]
      }
    },
    "model_evaluation": {
      "model_rankings": [
        {
          "rank": 1,
          "model_id": "random_forest_regressor_20250809_023400",
          "algorithm": "random_forest_regressor",
          "primary_metric_value": 0.7048008412672981,
          "all_metrics": {
            "r2_score": 0.7048008412672981,
            "mean_squared_error": 210.07103983333425,
            "mean_absolute_error": 12.510833333333352,
            "root_mean_squared_error": 14.493827646047619
          },
          "training_time": 0.034
        },
        {
          "rank": 2,
          "model_id": "ridge_20250809_023400",
          "algorithm": "ridge",
          "primary_metric_value": 0.4795818804264823,
          "all_metrics": {
            "r2_score": 0.4795818804264823,
            "mean_squared_error": 370.34243592106304,
            "mean_absolute_error": 15.951479632812969,
            "root_mean_squared_error": 19.244283201020064
          },
          "training_time": 0.002
        },
        {
          "rank": 3,
          "model_id": "linear_regression_20250809_023400",
          "algorithm": "linear_regression",
          "primary_metric_value": 0.15912098705844846,
          "all_metrics": {
            "r2_score": 0.15912098705844846,
            "mean_squared_error": 598.390352401404,
            "mean_absolute_error": 19.40180579347176,
            "root_mean_squared_error": 24.462018567595848
          },
          "training_time": 0.001
        },
        {
          "rank": 4,
          "model_id": "svm_regressor_20250809_023400",
          "algorithm": "svm_regressor",
          "primary_metric_value": -1.3031347717338995,
          "all_metrics": {
            "r2_score": -1.3031347717338995,
            "mean_squared_error": 1638.9678021153923,
            "mean_absolute_error": 37.29417769302979,
            "root_mean_squared_error": 40.48416730174146
          },
          "training_time": 0.001
        }
      ],
      "best_model": {
        "model_id": "random_forest_regressor_20250809_023400",
        "algorithm": "random_forest_regressor",
        "performance_metrics": {
          "r2_score": 0.7048008412672981,
          "mean_squared_error": 210.07103983333425,
          "mean_absolute_error": 12.510833333333352,
          "root_mean_squared_error": 14.493827646047619
        },
        "feature_importance": [
          [
            "total_visits_scaled",
            0.17029385398013971
          ],
          [
            "last_visit_days_scaled",
            0.13103237597383058
          ],
          [
            "total_visits",
            0.1194575327382813
          ],
          [
            "spending_score",
            0.11040339774339779
          ],
          [
            "last_visit_days",
            0.10411107384240675
          ],
          [
            "spending_score_scaled",
            0.10087238861958198
          ],
          [
            "income",
            0.05855267385003378
          ],
          [
            "income_scaled",
            0.039635964484584084
          ],
          [
            "age",
            0.03268658232824444
          ],
          [
            "customer_id_scaled",
            0.026270560789244942
          ]
        ],
        "coefficients": [],
        "hyperparameters": {
          "bootstrap": true,
          "ccp_alpha": 0.0,
          "criterion": "squared_error",
          "max_depth": null,
          "max_features": 1.0,
          "max_leaf_nodes": null,
          "max_samples": null,
          "min_impurity_decrease": 0.0,
          "min_samples_leaf": 1,
          "min_samples_split": 2,
          "min_weight_fraction_leaf": 0.0,
          "monotonic_cst": null,
          "n_estimators": 100,
          "n_jobs": null,
          "oob_score": false,
          "random_state": 42,
          "verbose": 0,
          "warm_start": false
        }
      },
      "performance_analysis": {
        "best_algorithm": "random_forest_regressor",
        "performance_gap": 2.0079356130011976,
        "training_time_analysis": {
          "fastest_algorithm": "linear_regression",
          "slowest_algorithm": "random_forest_regressor",
          "average_training_time": 0.01,
          "training_time_range": [
            0.001,
            0.034
          ]
        },
        "metric_summary": {
          "r2_score": {
            "best": 0.7048008412672981,
            "worst": -1.3031347717338995,
            "average": 0.01,
            "std": 0.783
          },
          "mean_squared_error": {
            "best": 1638.9678021153923,
            "worst": 210.07103983333425,
            "average": 704.443,
            "std": 556.914
          },
          "mean_absolute_error": {
            "best": 37.29417769302979,
            "worst": 12.510833333333352,
            "average": 21.29,
            "std": 9.556
          },
          "root_mean_squared_error": {
            "best": 40.48416730174146,
            "worst": 14.493827646047619,
            "average": 24.671,
            "std": 9.787
          }
        }
      },
      "model_interpretability": {
        "model_interpretability": [
          {
            "algorithm": "random_forest_regressor",
            "interpretability_level": "Medium",
            "has_feature_importance": true,
            "has_coefficients": false
          },
          {
            "algorithm": "ridge",
            "interpretability_level": "Unknown",
            "has_feature_importance": false,
            "has_coefficients": true
          },
          {
            "algorithm": "linear_regression",
            "interpretability_level": "High",
            "has_feature_importance": false,
            "has_coefficients": true
          },
          {
            "algorithm": "svm_regressor",
            "interpretability_level": "Low",
            "has_feature_importance": false,
            "has_coefficients": false
          }
        ],
        "most_interpretable": {
          "algorithm": "linear_regression",
          "interpretability_level": "High",
          "has_feature_importance": false,
          "has_coefficients": true
        }
      }
    },
    "recommendations": {
      "immediate_actions": [],
      "model_improvement_suggestions": [
        {
          "suggestion": "Tune Random Forest hyperparameters",
          "details": "Optimize n_estimators, max_depth, and min_samples_split for better performance",
          "expected_impact": "Medium"
        }
      ],
      "production_considerations": [
        {
          "consideration": "Model monitoring",
          "details": "Set up performance monitoring and data drift detection",
          "importance": "High"
        },
        {
          "consideration": "Model versioning",
          "details": "Implement model versioning and rollback capabilities",
          "importance": "Medium"
        },
        {
          "consideration": "Inference latency",
          "details": "Best model (random_forest_regressor) training time: 0.00s",
          "importance": "Medium"
        }
      ],
      "next_experiments": [
        {
          "experiment": "Hyperparameter tuning",
          "description": "Optimize hyperparameters for random_forest_regressor",
          "expected_effort": "Medium"
        },
        {
          "experiment": "Ensemble methods",
          "description": "Combine top performing models using voting or stacking",
          "expected_effort": "Medium"
        },
        {
          "experiment": "Advanced feature engineering",
          "description": "Create domain-specific features and interactions",
          "expected_effort": "High"
        }
      ]
    },
    "ai_guidance": {
      "error": "AI guidance generation failed",
      "details": "asyncio.run() cannot be called from a running event loop"
    },
    "experiment_metadata": {
      "timestamp": "2025-08-09T02:34:00.234628",
      "ai_guidance_enabled": true,
      "execution_time_seconds": 0.34,
      "data_shape": [
        30,
        10
      ]
    }
  }
}