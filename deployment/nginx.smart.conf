# nginx.conf for Smart MCP Server Cluster
events {
    worker_connections 1024;
}

http {
    upstream smart_mcp_backend {
        # Use ip_hash for session affinity - CRITICAL for MCP persistent connections
        ip_hash;
        server smart-mcp-server-1:4321 max_fails=1 fail_timeout=5s;
        server smart-mcp-server-2:4322 max_fails=1 fail_timeout=5s;
        server smart-mcp-server-3:4323 max_fails=1 fail_timeout=5s;
    }

    # Rate limiting - more lenient for Smart MCP with AI processing
    limit_req_zone $binary_remote_addr zone=smart_mcp_limit:10m rate=20r/s;

    server {
        listen 80;
        server_name localhost;

        # Smart MCP endpoints - Handle both /mcp and /mcp/
        location ~ ^/mcp/?$ {
            limit_req zone=smart_mcp_limit burst=30 nodelay;
            
            # Add trailing slash if missing
            rewrite ^/mcp$ /mcp/ permanent;
            
            proxy_pass http://smart_mcp_backend;
            
            # Essential headers for MCP
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass through ALL headers - critical for MCP client
            proxy_pass_request_headers on;
            proxy_pass_request_body on;
            
            # HTTP/1.1 with persistent connections
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Disable ALL forms of buffering for real-time SSE
            proxy_buffering off;
            proxy_cache off;
            proxy_request_buffering off;
            proxy_max_temp_file_size 0;
            
            # Extended timeouts for Smart MCP AI processing
            proxy_connect_timeout 30s;
            proxy_send_timeout 86400s;    # 24 hours
            proxy_read_timeout 86400s;    # 24 hours
            
            # SSE and streaming specific settings
            proxy_set_header Cache-Control "no-cache, no-store, must-revalidate";
            proxy_set_header Pragma "no-cache";
            proxy_set_header Expires "0";
            
            # Response headers for SSE
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            add_header X-Accel-Buffering "no" always;
            
            # Force nginx to not modify the response
            proxy_ignore_headers Cache-Control Expires;
            proxy_hide_header Cache-Control;
            proxy_hide_header Pragma;
            proxy_hide_header Expires;
        }

        # Smart server specific endpoints
        location /analyze {
            limit_req zone=smart_mcp_limit burst=10 nodelay;
            proxy_pass http://smart_mcp_backend/analyze;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Content-Type application/json;
            
            # AI processing can take time
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        location /stats {
            limit_req zone=smart_mcp_limit burst=5 nodelay;
            proxy_pass http://smart_mcp_backend/stats;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://smart_mcp_backend/health;
            proxy_set_header Host $host;
            access_log off;
        }

        # Root endpoint for testing
        location / {
            return 200 "Smart MCP Server Cluster - Endpoints: /mcp, /analyze, /stats, /health";
            add_header Content-Type text/plain;
        }
    }

    # Enable gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        application/json
        application/javascript
        text/css
        text/javascript
        text/plain
        text/xml;

    # Add CORS headers for web clients
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
}